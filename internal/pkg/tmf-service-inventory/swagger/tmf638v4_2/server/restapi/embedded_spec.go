// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 638 - Service Inventory Management\n\n Version 4.2 \n\nThe intent of this API is to provide a consistent/standardized mechanism to query and manipulate the Service inventory.\n\nThe Service Inventory API can be used to query the service instances for a customer via Self Service Portal or the Call Centre operator can query the service instances on behalf of the customer while a customer may have a complaint or a query.\nNote: Only the CustomerFacingServices instances will be presented to the customer.\n\nThe Service Inventory API can be called by the Service Order Management to create a new service instance/ update an existing service instance in the Service Inventory.\n\n### Service resource\nService is an abstract base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of  Service: CustomerFacingService and ResourceFacingService.\n\n### Service Inventory API performs the following operations on service  :\n- Retrieve  a service or a collection of services depending on filter criteria\n- Partial update of a service (including updating rules)\n- Create a service (including default values and creation rules and for administration users only)\n- Delete a service (for administration users only)\n- Notification of events on service\n\nCopyright (c)TM Forum 2019. All Rights Reserved.",
    "title": "Service Inventory Management",
    "version": "4.2.0"
  },
  "host": "serverRoot",
  "basePath": "/tmf-api/serviceInventory/v4",
  "paths": {
    "/hub": {
      "post": {
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Register a listener",
        "operationId": "registerListener",
        "parameters": [
          {
            "description": "Data containing the callback endpoint to deliver the information",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscribed",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hub/{id}": {
      "delete": {
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Unregister a listener",
        "operationId": "unregisterListener",
        "parameters": [
          {
            "type": "string",
            "description": "The id of the registered listener",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceAttributeValueChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceAttributeValueChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceAttributeValueChangeEvent",
        "operationId": "listenToServiceAttributeValueChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceAttributeValueChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceCreateEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceCreateEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceCreateEvent",
        "operationId": "listenToServiceCreateEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceCreateEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceDeleteEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceDeleteEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceDeleteEvent",
        "operationId": "listenToServiceDeleteEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceDeleteEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOperatingStatusChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOperatingStatusChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOperatingStatusChangeEvent",
        "operationId": "listenToServiceOperatingStatusChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOperatingStatusChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceStateChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceStateChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceStateChangeEvent",
        "operationId": "listenToServiceStateChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceStateChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service": {
      "get": {
        "description": "This operation list or find Service entities",
        "tags": [
          "service"
        ],
        "summary": "List or find Service objects",
        "operationId": "listService",
        "parameters": [
          {
            "type": "string",
            "description": "Comma-separated properties to be provided in response",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested number of resources to be provided in response",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Service"
              }
            },
            "headers": {
              "X-Result-Count": {
                "type": "integer",
                "description": "Actual number of items returned in the response body"
              },
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of items matching criteria"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a Service entity.",
        "tags": [
          "service"
        ],
        "summary": "Creates a Service",
        "operationId": "createService",
        "parameters": [
          {
            "description": "The Service to be created",
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service/{id}": {
      "get": {
        "description": "This operation retrieves a Service entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "service"
        ],
        "summary": "Retrieves a Service by ID",
        "operationId": "retrieveService",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the Service",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Comma-separated properties to provide in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "This operation deletes a Service entity.",
        "tags": [
          "service"
        ],
        "summary": "Deletes a Service",
        "operationId": "deleteService",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the Service",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "This operation updates partially a Service entity.",
        "tags": [
          "service"
        ],
        "summary": "Updates partially a Service",
        "operationId": "patchService",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the Service",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "The Service to be updated",
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service_Update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Addressable": {
      "description": "Base schema for adressable entities",
      "type": "object",
      "properties": {
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"addressable,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Any": {},
    "Characteristic": {
      "description": "Describes a given characteristic of an object or entity through a name/value pair.",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "characteristicRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CharacteristicRelationship"
          },
          "x-go-custom-tag": "bson:\"characteristicRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": false
        },
        "value": {
          "description": "The value of the characteristic",
          "type": "object",
          "x-go-custom-tag": "bson:\"value,omitempty\"",
          "x-go-type": "interface{}",
          "x-nullable": false
        },
        "valueType": {
          "description": "Data type of the value of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"valueType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CharacteristicRelationship": {
      "description": "Another Characteristic that is related to the current Characteristic.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@shemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "description": "The type of relationship",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ConstraintRef": {
      "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "version": {
          "description": "constraint version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ContextUpdate": {
      "description": "Holds the date when the status/state last changed and provides a reason/context to the current value of the status/state. It has the relatedEntity and relatedParty in relation to the status/state value.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Identifier of the context update",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "lastUpdate": {
          "description": "The date and time the status/state last changed.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"lastUpdate,omitempty\"",
          "x-nullable": true
        },
        "reason": {
          "description": "The reason/context for the current value of the status/state.",
          "type": "string",
          "x-go-custom-tag": "bson:\"reason,omitempty\"",
          "x-nullable": true
        },
        "relatedEntity": {
          "description": "A list of entities that represent observations, anomalies or managing entities etc associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRef"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "List of parties associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "Entity": {
      "description": "Base entity schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityRef": {
      "description": "Entity reference schema to be use for all entityRef class.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityValue": {
      "description": "Base entity value  schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Error": {
      "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
      "type": "object",
      "required": [
        "code",
        "reason"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class entity name.",
          "type": "string"
        },
        "code": {
          "description": "Application relevant detail, defined in the API or a common list.",
          "type": "string"
        },
        "message": {
          "description": "More details and corrective actions related to the error which can be shown to a client user.",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error which can be shown to a client user.",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error.",
          "type": "string",
          "format": "uri"
        },
        "status": {
          "description": "HTTP Error code extension",
          "type": "string"
        }
      }
    },
    "EventSubscription": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "id",
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback,omitempty\"",
          "x-nullable": false
        },
        "id": {
          "description": "Id of the listener",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EventSubscriptionInput": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback,omitempty\"",
          "x-nullable": false
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Extensible": {
      "description": "Base Extensible schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ExternalIdentifier": {
      "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifierType": {
          "description": "Type of the identification, typically would be the type of the entity within the external system",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalIdentifierType,omitempty\"",
          "x-nullable": true,
          "example": "ProductOrder"
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identification of the entity within the external system.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false,
          "example": "MC2255771199555"
        },
        "owner": {
          "description": "Name of the external system that owns the entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"owner,omitempty\"",
          "x-nullable": true,
          "example": "MagentoCommerce"
        }
      }
    },
    "Feature": {
      "description": "Configuration feature.",
      "type": "object",
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "constraint": {
          "description": "This is a list of feature constraints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstraintRef"
          },
          "x-go-custom-tag": "bson:\"constraint,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "featureCharacteristic": {
          "description": "This is a list of Characteristics for a particular feature.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"featureCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "featureRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureRelationship"
          },
          "x-go-custom-tag": "bson:\"featureRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "Unique identifier of the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "True if this is a feature group. Default is false.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isEnabled": {
          "description": "True if this feature is enabled. Default is true.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isEnabled,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "This is the name for the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "FeatureRelationship": {
      "description": "Configuration feature",
      "type": "object",
      "required": [
        "name",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "This is the name of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "description": "This is the type of the feature relationship.",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        },
        "validFor": {
          "description": "The period for which this feature relationship is valid.",
          "x-go-custom-tag": "bson:\"validFor,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/TimePeriod"
        }
      }
    },
    "Note": {
      "description": "Extra information about a given entity",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "author": {
          "description": "Author of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"author,omitempty\"",
          "x-nullable": true,
          "example": [
            "Mr. N. Bene"
          ]
        },
        "date": {
          "description": "Date of the note",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"date,omitempty\"",
          "x-nullable": true,
          "example": [
            "2020-11-20T08:00:00Z"
          ]
        },
        "id": {
          "description": "Identifier of the note within its containing entity",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true,
          "example": [
            "afa9-3d90aaa8da0f"
          ]
        },
        "text": {
          "description": "Text of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"text,omitempty\"",
          "x-nullable": false,
          "example": [
            "This is important"
          ]
        }
      }
    },
    "OrderItemActionType": {
      "description": "action to be performed on the product",
      "type": "string",
      "enum": [
        "add",
        "modify",
        "delete",
        "noChange"
      ]
    },
    "Place": {
      "description": "Place reference. Place defines the places where the products are sold or delivered.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "PlaceRef": {
      "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedEntityRefOrValue": {
      "description": "A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": false
        }
      }
    },
    "RelatedParty": {
      "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
      "type": "object",
      "required": [
        "@referredType",
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": false
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "description": "Role played by the related party",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedPlaceRefOrValue": {
      "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": false
        }
      }
    },
    "RelatedServiceOrderItem": {
      "description": "RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination.",
      "type": "object",
      "required": [
        "itemId",
        "serviceOrderId"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "itemAction": {
          "description": "Action of the order item for this service",
          "x-go-custom-tag": "bson:\"itemAction,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/OrderItemActionType"
        },
        "itemId": {
          "description": "Identifier of the order item where the service was managed",
          "type": "string",
          "x-go-custom-tag": "bson:\"itemId,omitempty\"",
          "x-nullable": false
        },
        "role": {
          "description": "role of the service order item for this service",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderHref": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderHref,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderId": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderId,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ResourceRef": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Service": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"_id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOperatingStatusType"
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceAttributeValueChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceAttributeValueChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"fieldPath,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceAttributeValueChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceCreateEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceCreateEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceCreateEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceDeleteEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceDeleteEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceDeleteEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceOperatingStatusChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceOperatingStatusChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOperatingStatusChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceOperatingStatusType": {
      "description": "Valid values for the Operating status of the service",
      "type": "string",
      "enum": [
        "pending",
        "configured",
        "starting",
        "running",
        "degraded",
        "failed",
        "limited",
        "stopping",
        "stopped",
        "unknown"
      ]
    },
    "ServiceRef": {
      "description": "Service reference, for when Service is used by other entities",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceRefOrValue": {
      "description": "A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceOperatingStatusType"
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceRelationship": {
      "type": "object",
      "required": [
        "relationshipType",
        "service"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": false,
          "x-omitempty": true
        },
        "service": {
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceRefOrValue"
        },
        "serviceRelationshipCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceRelationshipCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceSpecificationRef": {
      "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false,
          "x-omitempty": true
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "version": {
          "description": "Service specification version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceStateChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceStateChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceStateChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceStateType": {
      "description": "Valid values for the lifecycle state of the service",
      "type": "string",
      "enum": [
        "feasibilityChecked",
        "designed",
        "reserved",
        "inactive",
        "active",
        "suspended",
        "terminated"
      ]
    },
    "Service_Create": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.\nSkipped properties: id,href,operatingStatus,operatingStatusContextUpdate",
      "type": "object",
      "required": [
        "state",
        "serviceSpecification"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "Service_Update": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.\nSkipped properties: id,href,serviceDate",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOperatingStatusType"
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "TimePeriod": {
      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
      "type": "object",
      "properties": {
        "endDateTime": {
          "description": "End of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "example": "1985-04-12T23:20:50.52Z"
        },
        "startDateTime": {
          "description": "Start of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "example": "1985-04-12T23:20:50.52Z"
        }
      }
    }
  },
  "tags": [
    {
      "name": "service"
    },
    {
      "name": "notification listeners (client side)"
    },
    {
      "name": "events subscription"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 638 - Service Inventory Management\n\n Version 4.2 \n\nThe intent of this API is to provide a consistent/standardized mechanism to query and manipulate the Service inventory.\n\nThe Service Inventory API can be used to query the service instances for a customer via Self Service Portal or the Call Centre operator can query the service instances on behalf of the customer while a customer may have a complaint or a query.\nNote: Only the CustomerFacingServices instances will be presented to the customer.\n\nThe Service Inventory API can be called by the Service Order Management to create a new service instance/ update an existing service instance in the Service Inventory.\n\n### Service resource\nService is an abstract base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of  Service: CustomerFacingService and ResourceFacingService.\n\n### Service Inventory API performs the following operations on service  :\n- Retrieve  a service or a collection of services depending on filter criteria\n- Partial update of a service (including updating rules)\n- Create a service (including default values and creation rules and for administration users only)\n- Delete a service (for administration users only)\n- Notification of events on service\n\nCopyright (c)TM Forum 2019. All Rights Reserved.",
    "title": "Service Inventory Management",
    "version": "4.2.0"
  },
  "host": "serverRoot",
  "basePath": "/tmf-api/serviceInventory/v4",
  "paths": {
    "/hub": {
      "post": {
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Register a listener",
        "operationId": "registerListener",
        "parameters": [
          {
            "description": "Data containing the callback endpoint to deliver the information",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscribed",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hub/{id}": {
      "delete": {
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Unregister a listener",
        "operationId": "unregisterListener",
        "parameters": [
          {
            "type": "string",
            "description": "The id of the registered listener",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceAttributeValueChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceAttributeValueChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceAttributeValueChangeEvent",
        "operationId": "listenToServiceAttributeValueChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceAttributeValueChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceCreateEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceCreateEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceCreateEvent",
        "operationId": "listenToServiceCreateEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceCreateEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceDeleteEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceDeleteEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceDeleteEvent",
        "operationId": "listenToServiceDeleteEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceDeleteEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOperatingStatusChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOperatingStatusChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOperatingStatusChangeEvent",
        "operationId": "listenToServiceOperatingStatusChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOperatingStatusChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceStateChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceStateChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceStateChangeEvent",
        "operationId": "listenToServiceStateChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceStateChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service": {
      "get": {
        "description": "This operation list or find Service entities",
        "tags": [
          "service"
        ],
        "summary": "List or find Service objects",
        "operationId": "listService",
        "parameters": [
          {
            "type": "string",
            "description": "Comma-separated properties to be provided in response",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested number of resources to be provided in response",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Service"
              }
            },
            "headers": {
              "X-Result-Count": {
                "type": "integer",
                "description": "Actual number of items returned in the response body"
              },
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of items matching criteria"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a Service entity.",
        "tags": [
          "service"
        ],
        "summary": "Creates a Service",
        "operationId": "createService",
        "parameters": [
          {
            "description": "The Service to be created",
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/service/{id}": {
      "get": {
        "description": "This operation retrieves a Service entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "service"
        ],
        "summary": "Retrieves a Service by ID",
        "operationId": "retrieveService",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the Service",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Comma-separated properties to provide in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "This operation deletes a Service entity.",
        "tags": [
          "service"
        ],
        "summary": "Deletes a Service",
        "operationId": "deleteService",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the Service",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "This operation updates partially a Service entity.",
        "tags": [
          "service"
        ],
        "summary": "Updates partially a Service",
        "operationId": "patchService",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the Service",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "The Service to be updated",
            "name": "service",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service_Update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Addressable": {
      "description": "Base schema for adressable entities",
      "type": "object",
      "properties": {
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"addressable,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Any": {},
    "Characteristic": {
      "description": "Describes a given characteristic of an object or entity through a name/value pair.",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "characteristicRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CharacteristicRelationship"
          },
          "x-go-custom-tag": "bson:\"characteristicRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": false
        },
        "value": {
          "description": "The value of the characteristic",
          "type": "object",
          "x-go-custom-tag": "bson:\"value,omitempty\"",
          "x-go-type": "interface{}",
          "x-nullable": false
        },
        "valueType": {
          "description": "Data type of the value of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"valueType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CharacteristicRelationship": {
      "description": "Another Characteristic that is related to the current Characteristic.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@shemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "description": "The type of relationship",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ConstraintRef": {
      "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "version": {
          "description": "constraint version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ContextUpdate": {
      "description": "Holds the date when the status/state last changed and provides a reason/context to the current value of the status/state. It has the relatedEntity and relatedParty in relation to the status/state value.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Identifier of the context update",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "lastUpdate": {
          "description": "The date and time the status/state last changed.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"lastUpdate,omitempty\"",
          "x-nullable": true
        },
        "reason": {
          "description": "The reason/context for the current value of the status/state.",
          "type": "string",
          "x-go-custom-tag": "bson:\"reason,omitempty\"",
          "x-nullable": true
        },
        "relatedEntity": {
          "description": "A list of entities that represent observations, anomalies or managing entities etc associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRef"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "List of parties associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "Entity": {
      "description": "Base entity schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityRef": {
      "description": "Entity reference schema to be use for all entityRef class.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityValue": {
      "description": "Base entity value  schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Error": {
      "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
      "type": "object",
      "required": [
        "code",
        "reason"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class entity name.",
          "type": "string"
        },
        "code": {
          "description": "Application relevant detail, defined in the API or a common list.",
          "type": "string"
        },
        "message": {
          "description": "More details and corrective actions related to the error which can be shown to a client user.",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error which can be shown to a client user.",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error.",
          "type": "string",
          "format": "uri"
        },
        "status": {
          "description": "HTTP Error code extension",
          "type": "string"
        }
      }
    },
    "EventSubscription": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "id",
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback,omitempty\"",
          "x-nullable": false
        },
        "id": {
          "description": "Id of the listener",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EventSubscriptionInput": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback,omitempty\"",
          "x-nullable": false
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Extensible": {
      "description": "Base Extensible schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ExternalIdentifier": {
      "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifierType": {
          "description": "Type of the identification, typically would be the type of the entity within the external system",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalIdentifierType,omitempty\"",
          "x-nullable": true,
          "example": "ProductOrder"
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identification of the entity within the external system.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false,
          "example": "MC2255771199555"
        },
        "owner": {
          "description": "Name of the external system that owns the entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"owner,omitempty\"",
          "x-nullable": true,
          "example": "MagentoCommerce"
        }
      }
    },
    "Feature": {
      "description": "Configuration feature.",
      "type": "object",
      "required": [
        "name",
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "constraint": {
          "description": "This is a list of feature constraints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstraintRef"
          },
          "x-go-custom-tag": "bson:\"constraint,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "featureCharacteristic": {
          "description": "This is a list of Characteristics for a particular feature.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"featureCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "featureRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureRelationship"
          },
          "x-go-custom-tag": "bson:\"featureRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "Unique identifier of the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "True if this is a feature group. Default is false.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isEnabled": {
          "description": "True if this feature is enabled. Default is true.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isEnabled,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "This is the name for the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "FeatureRelationship": {
      "description": "Configuration feature",
      "type": "object",
      "required": [
        "name",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "This is the name of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "description": "This is the type of the feature relationship.",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        },
        "validFor": {
          "description": "The period for which this feature relationship is valid.",
          "x-go-custom-tag": "bson:\"validFor,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/TimePeriod"
        }
      }
    },
    "Note": {
      "description": "Extra information about a given entity",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "author": {
          "description": "Author of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"author,omitempty\"",
          "x-nullable": true,
          "example": [
            "Mr. N. Bene"
          ]
        },
        "date": {
          "description": "Date of the note",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"date,omitempty\"",
          "x-nullable": true,
          "example": [
            "2020-11-20T08:00:00Z"
          ]
        },
        "id": {
          "description": "Identifier of the note within its containing entity",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true,
          "example": [
            "afa9-3d90aaa8da0f"
          ]
        },
        "text": {
          "description": "Text of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"text,omitempty\"",
          "x-nullable": false,
          "example": [
            "This is important"
          ]
        }
      }
    },
    "OrderItemActionType": {
      "description": "action to be performed on the product",
      "type": "string",
      "enum": [
        "add",
        "modify",
        "delete",
        "noChange"
      ]
    },
    "Place": {
      "description": "Place reference. Place defines the places where the products are sold or delivered.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "PlaceRef": {
      "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedEntityRefOrValue": {
      "description": "A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": false
        }
      }
    },
    "RelatedParty": {
      "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
      "type": "object",
      "required": [
        "@referredType",
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": false
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "description": "Role played by the related party",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedPlaceRefOrValue": {
      "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": false
        }
      }
    },
    "RelatedServiceOrderItem": {
      "description": "RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination.",
      "type": "object",
      "required": [
        "itemId",
        "serviceOrderId"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "itemAction": {
          "description": "Action of the order item for this service",
          "x-go-custom-tag": "bson:\"itemAction,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/OrderItemActionType"
        },
        "itemId": {
          "description": "Identifier of the order item where the service was managed",
          "type": "string",
          "x-go-custom-tag": "bson:\"itemId,omitempty\"",
          "x-nullable": false
        },
        "role": {
          "description": "role of the service order item for this service",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderHref": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderHref,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderId": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderId,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ResourceRef": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Service": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"_id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOperatingStatusType"
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceAttributeValueChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceAttributeValueChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"fieldPath,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceAttributeValueChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceCreateEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceCreateEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceCreateEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceDeleteEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceDeleteEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceDeleteEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceOperatingStatusChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceOperatingStatusChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOperatingStatusChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceOperatingStatusType": {
      "description": "Valid values for the Operating status of the service",
      "type": "string",
      "enum": [
        "pending",
        "configured",
        "starting",
        "running",
        "degraded",
        "failed",
        "limited",
        "stopping",
        "stopped",
        "unknown"
      ]
    },
    "ServiceRef": {
      "description": "Service reference, for when Service is used by other entities",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceRefOrValue": {
      "description": "A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceOperatingStatusType"
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceRelationship": {
      "type": "object",
      "required": [
        "relationshipType",
        "service"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": false,
          "x-omitempty": true
        },
        "service": {
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceRefOrValue"
        },
        "serviceRelationshipCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceRelationshipCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceSpecificationRef": {
      "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": false,
          "x-omitempty": true
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "version": {
          "description": "Service specification version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceStateChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceStateChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": false
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": false
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": false
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceStateChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "service": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": false,
          "$ref": "#/definitions/Service"
        }
      }
    },
    "ServiceStateType": {
      "description": "Valid values for the lifecycle state of the service",
      "type": "string",
      "enum": [
        "feasibilityChecked",
        "designed",
        "reserved",
        "inactive",
        "active",
        "suspended",
        "terminated"
      ]
    },
    "Service_Create": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.\nSkipped properties: id,href,operatingStatus,operatingStatusContextUpdate",
      "type": "object",
      "required": [
        "state",
        "serviceSpecification"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "Service_Update": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.\nSkipped properties: id,href,serviceDate",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOperatingStatusType"
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceStateType"
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "TimePeriod": {
      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
      "type": "object",
      "properties": {
        "endDateTime": {
          "description": "End of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "example": "1985-04-12T23:20:50.52Z"
        },
        "startDateTime": {
          "description": "Start of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "example": "1985-04-12T23:20:50.52Z"
        }
      }
    }
  },
  "tags": [
    {
      "name": "service"
    },
    {
      "name": "notification listeners (client side)"
    },
    {
      "name": "events subscription"
    }
  ]
}`))
}
