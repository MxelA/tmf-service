// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ServiceOrderItemRef service order item ref
//
// swagger:model ServiceOrderItemRef
type ServiceOrderItemRef struct {

	// When sub-classing, this defines the super-class
	AtBaseType *string `json:"@baseType,omitempty" bson:"@baseType,omitempty"`

	// The actual type of the target instance when needed for disambiguation.
	AtReferredType *string `json:"@referredType,omitempty" bson:"@referredType,omitempty"`

	// A URI to a JSON-Schema file that defines additional attributes and relationships
	// Format: uri
	AtSchemaLocation *strfmt.URI `json:"@schemaLocation,omitempty" bson:"@schemaLocation,omitempty"`

	// When sub-classing, this defines the sub-class Extensible name
	AtType *string `json:"@type,omitempty" bson:"@type,omitempty"`

	// Identifier of the line item
	ItemID string `json:"itemId,omitempty" bson:"itemId"`

	// Link to the order to which this item belongs to
	// Format: uri
	ServiceOrderHref *strfmt.URI `json:"serviceOrderHref,omitempty" bson:"serviceOrderHref,omitempty"`

	// Identifier of the order that this item belongs to
	ServiceOrderID *string `json:"serviceOrderId,omitempty" bson:"serviceOrderId,omitempty"`
}

// Validate validates this service order item ref
func (m *ServiceOrderItemRef) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAtSchemaLocation(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateServiceOrderHref(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ServiceOrderItemRef) validateAtSchemaLocation(formats strfmt.Registry) error {
	if swag.IsZero(m.AtSchemaLocation) { // not required
		return nil
	}

	if err := validate.FormatOf("@schemaLocation", "body", "uri", m.AtSchemaLocation.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *ServiceOrderItemRef) validateServiceOrderHref(formats strfmt.Registry) error {
	if swag.IsZero(m.ServiceOrderHref) { // not required
		return nil
	}

	if err := validate.FormatOf("serviceOrderHref", "body", "uri", m.ServiceOrderHref.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this service order item ref based on context it is used
func (m *ServiceOrderItemRef) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ServiceOrderItemRef) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ServiceOrderItemRef) UnmarshalBinary(b []byte) error {
	var res ServiceOrderItemRef
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
