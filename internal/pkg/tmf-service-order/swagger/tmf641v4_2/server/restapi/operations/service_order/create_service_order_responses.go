// Code generated by go-swagger; DO NOT EDIT.

package service_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MxelA/tmf-service/internal/pkg/tmf-service-order/swagger/tmf641v4_2/server/models"
)

// Alex Server response
// CreateServiceOrderCreatedCode is the HTTP code returned for type CreateServiceOrderCreated
const CreateServiceOrderCreatedCode int = 201

/*
CreateServiceOrderCreated Created

swagger:response createServiceOrderCreated
*/
type CreateServiceOrderCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceOrder `json:"body,omitempty"`
}

type CreateServiceOrderCreatedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderCreated creates CreateServiceOrderCreated with default headers values
func NewCreateServiceOrderCreated() *CreateServiceOrderCreated {

	return &CreateServiceOrderCreated{}
}

// NewCreateServiceOrderCreated creates CreateServiceOrderCreatedRaw with default headers values
func NewCreateServiceOrderCreatedRaw() *CreateServiceOrderCreatedRaw {

	return &CreateServiceOrderCreatedRaw{}
}

// WithPayload adds the payload to the create service order created response
func (o *CreateServiceOrderCreated) WithPayload(payload *models.ServiceOrder) *CreateServiceOrderCreated {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order created response
func (o *CreateServiceOrderCreatedRaw) WithPayload(payload interface{}) *CreateServiceOrderCreatedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order created response
func (o *CreateServiceOrderCreated) SetPayload(payload *models.ServiceOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderCreatedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// CreateServiceOrderBadRequestCode is the HTTP code returned for type CreateServiceOrderBadRequest
const CreateServiceOrderBadRequestCode int = 400

/*
CreateServiceOrderBadRequest Bad Request

swagger:response createServiceOrderBadRequest
*/
type CreateServiceOrderBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type CreateServiceOrderBadRequestRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderBadRequest creates CreateServiceOrderBadRequest with default headers values
func NewCreateServiceOrderBadRequest() *CreateServiceOrderBadRequest {

	return &CreateServiceOrderBadRequest{}
}

// NewCreateServiceOrderBadRequest creates CreateServiceOrderBadRequestRaw with default headers values
func NewCreateServiceOrderBadRequestRaw() *CreateServiceOrderBadRequestRaw {

	return &CreateServiceOrderBadRequestRaw{}
}

// WithPayload adds the payload to the create service order bad request response
func (o *CreateServiceOrderBadRequest) WithPayload(payload *models.Error) *CreateServiceOrderBadRequest {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order bad request response
func (o *CreateServiceOrderBadRequestRaw) WithPayload(payload interface{}) *CreateServiceOrderBadRequestRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order bad request response
func (o *CreateServiceOrderBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderBadRequestRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// CreateServiceOrderUnauthorizedCode is the HTTP code returned for type CreateServiceOrderUnauthorized
const CreateServiceOrderUnauthorizedCode int = 401

/*
CreateServiceOrderUnauthorized Unauthorized

swagger:response createServiceOrderUnauthorized
*/
type CreateServiceOrderUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type CreateServiceOrderUnauthorizedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderUnauthorized creates CreateServiceOrderUnauthorized with default headers values
func NewCreateServiceOrderUnauthorized() *CreateServiceOrderUnauthorized {

	return &CreateServiceOrderUnauthorized{}
}

// NewCreateServiceOrderUnauthorized creates CreateServiceOrderUnauthorizedRaw with default headers values
func NewCreateServiceOrderUnauthorizedRaw() *CreateServiceOrderUnauthorizedRaw {

	return &CreateServiceOrderUnauthorizedRaw{}
}

// WithPayload adds the payload to the create service order unauthorized response
func (o *CreateServiceOrderUnauthorized) WithPayload(payload *models.Error) *CreateServiceOrderUnauthorized {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order unauthorized response
func (o *CreateServiceOrderUnauthorizedRaw) WithPayload(payload interface{}) *CreateServiceOrderUnauthorizedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order unauthorized response
func (o *CreateServiceOrderUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderUnauthorizedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// CreateServiceOrderForbiddenCode is the HTTP code returned for type CreateServiceOrderForbidden
const CreateServiceOrderForbiddenCode int = 403

/*
CreateServiceOrderForbidden Forbidden

swagger:response createServiceOrderForbidden
*/
type CreateServiceOrderForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type CreateServiceOrderForbiddenRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderForbidden creates CreateServiceOrderForbidden with default headers values
func NewCreateServiceOrderForbidden() *CreateServiceOrderForbidden {

	return &CreateServiceOrderForbidden{}
}

// NewCreateServiceOrderForbidden creates CreateServiceOrderForbiddenRaw with default headers values
func NewCreateServiceOrderForbiddenRaw() *CreateServiceOrderForbiddenRaw {

	return &CreateServiceOrderForbiddenRaw{}
}

// WithPayload adds the payload to the create service order forbidden response
func (o *CreateServiceOrderForbidden) WithPayload(payload *models.Error) *CreateServiceOrderForbidden {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order forbidden response
func (o *CreateServiceOrderForbiddenRaw) WithPayload(payload interface{}) *CreateServiceOrderForbiddenRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order forbidden response
func (o *CreateServiceOrderForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderForbiddenRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// CreateServiceOrderMethodNotAllowedCode is the HTTP code returned for type CreateServiceOrderMethodNotAllowed
const CreateServiceOrderMethodNotAllowedCode int = 405

/*
CreateServiceOrderMethodNotAllowed Method Not allowed

swagger:response createServiceOrderMethodNotAllowed
*/
type CreateServiceOrderMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type CreateServiceOrderMethodNotAllowedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderMethodNotAllowed creates CreateServiceOrderMethodNotAllowed with default headers values
func NewCreateServiceOrderMethodNotAllowed() *CreateServiceOrderMethodNotAllowed {

	return &CreateServiceOrderMethodNotAllowed{}
}

// NewCreateServiceOrderMethodNotAllowed creates CreateServiceOrderMethodNotAllowedRaw with default headers values
func NewCreateServiceOrderMethodNotAllowedRaw() *CreateServiceOrderMethodNotAllowedRaw {

	return &CreateServiceOrderMethodNotAllowedRaw{}
}

// WithPayload adds the payload to the create service order method not allowed response
func (o *CreateServiceOrderMethodNotAllowed) WithPayload(payload *models.Error) *CreateServiceOrderMethodNotAllowed {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order method not allowed response
func (o *CreateServiceOrderMethodNotAllowedRaw) WithPayload(payload interface{}) *CreateServiceOrderMethodNotAllowedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order method not allowed response
func (o *CreateServiceOrderMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderMethodNotAllowedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// CreateServiceOrderConflictCode is the HTTP code returned for type CreateServiceOrderConflict
const CreateServiceOrderConflictCode int = 409

/*
CreateServiceOrderConflict Conflict

swagger:response createServiceOrderConflict
*/
type CreateServiceOrderConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type CreateServiceOrderConflictRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderConflict creates CreateServiceOrderConflict with default headers values
func NewCreateServiceOrderConflict() *CreateServiceOrderConflict {

	return &CreateServiceOrderConflict{}
}

// NewCreateServiceOrderConflict creates CreateServiceOrderConflictRaw with default headers values
func NewCreateServiceOrderConflictRaw() *CreateServiceOrderConflictRaw {

	return &CreateServiceOrderConflictRaw{}
}

// WithPayload adds the payload to the create service order conflict response
func (o *CreateServiceOrderConflict) WithPayload(payload *models.Error) *CreateServiceOrderConflict {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order conflict response
func (o *CreateServiceOrderConflictRaw) WithPayload(payload interface{}) *CreateServiceOrderConflictRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order conflict response
func (o *CreateServiceOrderConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderConflictRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// CreateServiceOrderInternalServerErrorCode is the HTTP code returned for type CreateServiceOrderInternalServerError
const CreateServiceOrderInternalServerErrorCode int = 500

/*
CreateServiceOrderInternalServerError Internal Server Error

swagger:response createServiceOrderInternalServerError
*/
type CreateServiceOrderInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type CreateServiceOrderInternalServerErrorRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewCreateServiceOrderInternalServerError creates CreateServiceOrderInternalServerError with default headers values
func NewCreateServiceOrderInternalServerError() *CreateServiceOrderInternalServerError {

	return &CreateServiceOrderInternalServerError{}
}

// NewCreateServiceOrderInternalServerError creates CreateServiceOrderInternalServerErrorRaw with default headers values
func NewCreateServiceOrderInternalServerErrorRaw() *CreateServiceOrderInternalServerErrorRaw {

	return &CreateServiceOrderInternalServerErrorRaw{}
}

// WithPayload adds the payload to the create service order internal server error response
func (o *CreateServiceOrderInternalServerError) WithPayload(payload *models.Error) *CreateServiceOrderInternalServerError {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the create service order internal server error response
func (o *CreateServiceOrderInternalServerErrorRaw) WithPayload(payload interface{}) *CreateServiceOrderInternalServerErrorRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create service order internal server error response
func (o *CreateServiceOrderInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateServiceOrderInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *CreateServiceOrderInternalServerErrorRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
