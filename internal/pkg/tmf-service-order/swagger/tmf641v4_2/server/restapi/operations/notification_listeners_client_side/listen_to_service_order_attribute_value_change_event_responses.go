// Code generated by go-swagger; DO NOT EDIT.

package notification_listeners_client_side

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MxelA/tmf-service/internal/pkg/tmf-service-order/swagger/tmf641v4_2/server/models"
)

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventCreatedCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventCreated
const ListenToServiceOrderAttributeValueChangeEventCreatedCode int = 201

/*
ListenToServiceOrderAttributeValueChangeEventCreated Notified

swagger:response listenToServiceOrderAttributeValueChangeEventCreated
*/
type ListenToServiceOrderAttributeValueChangeEventCreated struct {

	/*
	  In: Body
	*/
	Payload *models.EventSubscription `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventCreatedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventCreated creates ListenToServiceOrderAttributeValueChangeEventCreated with default headers values
func NewListenToServiceOrderAttributeValueChangeEventCreated() *ListenToServiceOrderAttributeValueChangeEventCreated {

	return &ListenToServiceOrderAttributeValueChangeEventCreated{}
}

// NewListenToServiceOrderAttributeValueChangeEventCreated creates ListenToServiceOrderAttributeValueChangeEventCreatedRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventCreatedRaw() *ListenToServiceOrderAttributeValueChangeEventCreatedRaw {

	return &ListenToServiceOrderAttributeValueChangeEventCreatedRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event created response
func (o *ListenToServiceOrderAttributeValueChangeEventCreated) WithPayload(payload *models.EventSubscription) *ListenToServiceOrderAttributeValueChangeEventCreated {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event created response
func (o *ListenToServiceOrderAttributeValueChangeEventCreatedRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventCreatedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event created response
func (o *ListenToServiceOrderAttributeValueChangeEventCreated) SetPayload(payload *models.EventSubscription) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventCreatedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventBadRequestCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventBadRequest
const ListenToServiceOrderAttributeValueChangeEventBadRequestCode int = 400

/*
ListenToServiceOrderAttributeValueChangeEventBadRequest Bad Request

swagger:response listenToServiceOrderAttributeValueChangeEventBadRequest
*/
type ListenToServiceOrderAttributeValueChangeEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventBadRequestRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventBadRequest creates ListenToServiceOrderAttributeValueChangeEventBadRequest with default headers values
func NewListenToServiceOrderAttributeValueChangeEventBadRequest() *ListenToServiceOrderAttributeValueChangeEventBadRequest {

	return &ListenToServiceOrderAttributeValueChangeEventBadRequest{}
}

// NewListenToServiceOrderAttributeValueChangeEventBadRequest creates ListenToServiceOrderAttributeValueChangeEventBadRequestRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventBadRequestRaw() *ListenToServiceOrderAttributeValueChangeEventBadRequestRaw {

	return &ListenToServiceOrderAttributeValueChangeEventBadRequestRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event bad request response
func (o *ListenToServiceOrderAttributeValueChangeEventBadRequest) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventBadRequest {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event bad request response
func (o *ListenToServiceOrderAttributeValueChangeEventBadRequestRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventBadRequestRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event bad request response
func (o *ListenToServiceOrderAttributeValueChangeEventBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventBadRequestRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventUnauthorizedCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventUnauthorized
const ListenToServiceOrderAttributeValueChangeEventUnauthorizedCode int = 401

/*
ListenToServiceOrderAttributeValueChangeEventUnauthorized Unauthorized

swagger:response listenToServiceOrderAttributeValueChangeEventUnauthorized
*/
type ListenToServiceOrderAttributeValueChangeEventUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventUnauthorized creates ListenToServiceOrderAttributeValueChangeEventUnauthorized with default headers values
func NewListenToServiceOrderAttributeValueChangeEventUnauthorized() *ListenToServiceOrderAttributeValueChangeEventUnauthorized {

	return &ListenToServiceOrderAttributeValueChangeEventUnauthorized{}
}

// NewListenToServiceOrderAttributeValueChangeEventUnauthorized creates ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw() *ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw {

	return &ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event unauthorized response
func (o *ListenToServiceOrderAttributeValueChangeEventUnauthorized) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventUnauthorized {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event unauthorized response
func (o *ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event unauthorized response
func (o *ListenToServiceOrderAttributeValueChangeEventUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventUnauthorizedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventForbiddenCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventForbidden
const ListenToServiceOrderAttributeValueChangeEventForbiddenCode int = 403

/*
ListenToServiceOrderAttributeValueChangeEventForbidden Forbidden

swagger:response listenToServiceOrderAttributeValueChangeEventForbidden
*/
type ListenToServiceOrderAttributeValueChangeEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventForbiddenRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventForbidden creates ListenToServiceOrderAttributeValueChangeEventForbidden with default headers values
func NewListenToServiceOrderAttributeValueChangeEventForbidden() *ListenToServiceOrderAttributeValueChangeEventForbidden {

	return &ListenToServiceOrderAttributeValueChangeEventForbidden{}
}

// NewListenToServiceOrderAttributeValueChangeEventForbidden creates ListenToServiceOrderAttributeValueChangeEventForbiddenRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventForbiddenRaw() *ListenToServiceOrderAttributeValueChangeEventForbiddenRaw {

	return &ListenToServiceOrderAttributeValueChangeEventForbiddenRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event forbidden response
func (o *ListenToServiceOrderAttributeValueChangeEventForbidden) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventForbidden {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event forbidden response
func (o *ListenToServiceOrderAttributeValueChangeEventForbiddenRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventForbiddenRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event forbidden response
func (o *ListenToServiceOrderAttributeValueChangeEventForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventForbiddenRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventNotFoundCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventNotFound
const ListenToServiceOrderAttributeValueChangeEventNotFoundCode int = 404

/*
ListenToServiceOrderAttributeValueChangeEventNotFound Not Found

swagger:response listenToServiceOrderAttributeValueChangeEventNotFound
*/
type ListenToServiceOrderAttributeValueChangeEventNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventNotFoundRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventNotFound creates ListenToServiceOrderAttributeValueChangeEventNotFound with default headers values
func NewListenToServiceOrderAttributeValueChangeEventNotFound() *ListenToServiceOrderAttributeValueChangeEventNotFound {

	return &ListenToServiceOrderAttributeValueChangeEventNotFound{}
}

// NewListenToServiceOrderAttributeValueChangeEventNotFound creates ListenToServiceOrderAttributeValueChangeEventNotFoundRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventNotFoundRaw() *ListenToServiceOrderAttributeValueChangeEventNotFoundRaw {

	return &ListenToServiceOrderAttributeValueChangeEventNotFoundRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event not found response
func (o *ListenToServiceOrderAttributeValueChangeEventNotFound) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventNotFound {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event not found response
func (o *ListenToServiceOrderAttributeValueChangeEventNotFoundRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventNotFoundRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event not found response
func (o *ListenToServiceOrderAttributeValueChangeEventNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventNotFoundRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed
const ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedCode int = 405

/*
ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed Method Not allowed

swagger:response listenToServiceOrderAttributeValueChangeEventMethodNotAllowed
*/
type ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventMethodNotAllowed creates ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed with default headers values
func NewListenToServiceOrderAttributeValueChangeEventMethodNotAllowed() *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed {

	return &ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed{}
}

// NewListenToServiceOrderAttributeValueChangeEventMethodNotAllowed creates ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw() *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw {

	return &ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event method not allowed response
func (o *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event method not allowed response
func (o *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event method not allowed response
func (o *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventMethodNotAllowedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventConflictCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventConflict
const ListenToServiceOrderAttributeValueChangeEventConflictCode int = 409

/*
ListenToServiceOrderAttributeValueChangeEventConflict Conflict

swagger:response listenToServiceOrderAttributeValueChangeEventConflict
*/
type ListenToServiceOrderAttributeValueChangeEventConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventConflictRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventConflict creates ListenToServiceOrderAttributeValueChangeEventConflict with default headers values
func NewListenToServiceOrderAttributeValueChangeEventConflict() *ListenToServiceOrderAttributeValueChangeEventConflict {

	return &ListenToServiceOrderAttributeValueChangeEventConflict{}
}

// NewListenToServiceOrderAttributeValueChangeEventConflict creates ListenToServiceOrderAttributeValueChangeEventConflictRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventConflictRaw() *ListenToServiceOrderAttributeValueChangeEventConflictRaw {

	return &ListenToServiceOrderAttributeValueChangeEventConflictRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event conflict response
func (o *ListenToServiceOrderAttributeValueChangeEventConflict) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventConflict {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event conflict response
func (o *ListenToServiceOrderAttributeValueChangeEventConflictRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventConflictRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event conflict response
func (o *ListenToServiceOrderAttributeValueChangeEventConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventConflictRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderAttributeValueChangeEventInternalServerErrorCode is the HTTP code returned for type ListenToServiceOrderAttributeValueChangeEventInternalServerError
const ListenToServiceOrderAttributeValueChangeEventInternalServerErrorCode int = 500

/*
ListenToServiceOrderAttributeValueChangeEventInternalServerError Internal Server Error

swagger:response listenToServiceOrderAttributeValueChangeEventInternalServerError
*/
type ListenToServiceOrderAttributeValueChangeEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderAttributeValueChangeEventInternalServerError creates ListenToServiceOrderAttributeValueChangeEventInternalServerError with default headers values
func NewListenToServiceOrderAttributeValueChangeEventInternalServerError() *ListenToServiceOrderAttributeValueChangeEventInternalServerError {

	return &ListenToServiceOrderAttributeValueChangeEventInternalServerError{}
}

// NewListenToServiceOrderAttributeValueChangeEventInternalServerError creates ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw with default headers values
func NewListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw() *ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw {

	return &ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw{}
}

// WithPayload adds the payload to the listen to service order attribute value change event internal server error response
func (o *ListenToServiceOrderAttributeValueChangeEventInternalServerError) WithPayload(payload *models.Error) *ListenToServiceOrderAttributeValueChangeEventInternalServerError {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order attribute value change event internal server error response
func (o *ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw) WithPayload(payload interface{}) *ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order attribute value change event internal server error response
func (o *ListenToServiceOrderAttributeValueChangeEventInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderAttributeValueChangeEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderAttributeValueChangeEventInternalServerErrorRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
