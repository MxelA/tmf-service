// Code generated by go-swagger; DO NOT EDIT.

package notification_listeners_client_side

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/MxelA/tmf-service/internal/pkg/tmf-service-order/swagger/tmf641v4_2/server/models"
)

// Alex Server response
// ListenToServiceOrderMilestoneEventCreatedCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventCreated
const ListenToServiceOrderMilestoneEventCreatedCode int = 201

/*
ListenToServiceOrderMilestoneEventCreated Notified

swagger:response listenToServiceOrderMilestoneEventCreated
*/
type ListenToServiceOrderMilestoneEventCreated struct {

	/*
	  In: Body
	*/
	Payload *models.EventSubscription `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventCreatedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventCreated creates ListenToServiceOrderMilestoneEventCreated with default headers values
func NewListenToServiceOrderMilestoneEventCreated() *ListenToServiceOrderMilestoneEventCreated {

	return &ListenToServiceOrderMilestoneEventCreated{}
}

// NewListenToServiceOrderMilestoneEventCreated creates ListenToServiceOrderMilestoneEventCreatedRaw with default headers values
func NewListenToServiceOrderMilestoneEventCreatedRaw() *ListenToServiceOrderMilestoneEventCreatedRaw {

	return &ListenToServiceOrderMilestoneEventCreatedRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event created response
func (o *ListenToServiceOrderMilestoneEventCreated) WithPayload(payload *models.EventSubscription) *ListenToServiceOrderMilestoneEventCreated {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event created response
func (o *ListenToServiceOrderMilestoneEventCreatedRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventCreatedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event created response
func (o *ListenToServiceOrderMilestoneEventCreated) SetPayload(payload *models.EventSubscription) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventCreatedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventBadRequestCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventBadRequest
const ListenToServiceOrderMilestoneEventBadRequestCode int = 400

/*
ListenToServiceOrderMilestoneEventBadRequest Bad Request

swagger:response listenToServiceOrderMilestoneEventBadRequest
*/
type ListenToServiceOrderMilestoneEventBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventBadRequestRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventBadRequest creates ListenToServiceOrderMilestoneEventBadRequest with default headers values
func NewListenToServiceOrderMilestoneEventBadRequest() *ListenToServiceOrderMilestoneEventBadRequest {

	return &ListenToServiceOrderMilestoneEventBadRequest{}
}

// NewListenToServiceOrderMilestoneEventBadRequest creates ListenToServiceOrderMilestoneEventBadRequestRaw with default headers values
func NewListenToServiceOrderMilestoneEventBadRequestRaw() *ListenToServiceOrderMilestoneEventBadRequestRaw {

	return &ListenToServiceOrderMilestoneEventBadRequestRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event bad request response
func (o *ListenToServiceOrderMilestoneEventBadRequest) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventBadRequest {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event bad request response
func (o *ListenToServiceOrderMilestoneEventBadRequestRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventBadRequestRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event bad request response
func (o *ListenToServiceOrderMilestoneEventBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventBadRequestRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventUnauthorizedCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventUnauthorized
const ListenToServiceOrderMilestoneEventUnauthorizedCode int = 401

/*
ListenToServiceOrderMilestoneEventUnauthorized Unauthorized

swagger:response listenToServiceOrderMilestoneEventUnauthorized
*/
type ListenToServiceOrderMilestoneEventUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventUnauthorizedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventUnauthorized creates ListenToServiceOrderMilestoneEventUnauthorized with default headers values
func NewListenToServiceOrderMilestoneEventUnauthorized() *ListenToServiceOrderMilestoneEventUnauthorized {

	return &ListenToServiceOrderMilestoneEventUnauthorized{}
}

// NewListenToServiceOrderMilestoneEventUnauthorized creates ListenToServiceOrderMilestoneEventUnauthorizedRaw with default headers values
func NewListenToServiceOrderMilestoneEventUnauthorizedRaw() *ListenToServiceOrderMilestoneEventUnauthorizedRaw {

	return &ListenToServiceOrderMilestoneEventUnauthorizedRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event unauthorized response
func (o *ListenToServiceOrderMilestoneEventUnauthorized) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventUnauthorized {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event unauthorized response
func (o *ListenToServiceOrderMilestoneEventUnauthorizedRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventUnauthorizedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event unauthorized response
func (o *ListenToServiceOrderMilestoneEventUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventUnauthorizedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventForbiddenCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventForbidden
const ListenToServiceOrderMilestoneEventForbiddenCode int = 403

/*
ListenToServiceOrderMilestoneEventForbidden Forbidden

swagger:response listenToServiceOrderMilestoneEventForbidden
*/
type ListenToServiceOrderMilestoneEventForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventForbiddenRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventForbidden creates ListenToServiceOrderMilestoneEventForbidden with default headers values
func NewListenToServiceOrderMilestoneEventForbidden() *ListenToServiceOrderMilestoneEventForbidden {

	return &ListenToServiceOrderMilestoneEventForbidden{}
}

// NewListenToServiceOrderMilestoneEventForbidden creates ListenToServiceOrderMilestoneEventForbiddenRaw with default headers values
func NewListenToServiceOrderMilestoneEventForbiddenRaw() *ListenToServiceOrderMilestoneEventForbiddenRaw {

	return &ListenToServiceOrderMilestoneEventForbiddenRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event forbidden response
func (o *ListenToServiceOrderMilestoneEventForbidden) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventForbidden {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event forbidden response
func (o *ListenToServiceOrderMilestoneEventForbiddenRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventForbiddenRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event forbidden response
func (o *ListenToServiceOrderMilestoneEventForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventForbiddenRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventNotFoundCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventNotFound
const ListenToServiceOrderMilestoneEventNotFoundCode int = 404

/*
ListenToServiceOrderMilestoneEventNotFound Not Found

swagger:response listenToServiceOrderMilestoneEventNotFound
*/
type ListenToServiceOrderMilestoneEventNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventNotFoundRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventNotFound creates ListenToServiceOrderMilestoneEventNotFound with default headers values
func NewListenToServiceOrderMilestoneEventNotFound() *ListenToServiceOrderMilestoneEventNotFound {

	return &ListenToServiceOrderMilestoneEventNotFound{}
}

// NewListenToServiceOrderMilestoneEventNotFound creates ListenToServiceOrderMilestoneEventNotFoundRaw with default headers values
func NewListenToServiceOrderMilestoneEventNotFoundRaw() *ListenToServiceOrderMilestoneEventNotFoundRaw {

	return &ListenToServiceOrderMilestoneEventNotFoundRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event not found response
func (o *ListenToServiceOrderMilestoneEventNotFound) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventNotFound {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event not found response
func (o *ListenToServiceOrderMilestoneEventNotFoundRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventNotFoundRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event not found response
func (o *ListenToServiceOrderMilestoneEventNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventNotFoundRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventMethodNotAllowedCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventMethodNotAllowed
const ListenToServiceOrderMilestoneEventMethodNotAllowedCode int = 405

/*
ListenToServiceOrderMilestoneEventMethodNotAllowed Method Not allowed

swagger:response listenToServiceOrderMilestoneEventMethodNotAllowed
*/
type ListenToServiceOrderMilestoneEventMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventMethodNotAllowedRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventMethodNotAllowed creates ListenToServiceOrderMilestoneEventMethodNotAllowed with default headers values
func NewListenToServiceOrderMilestoneEventMethodNotAllowed() *ListenToServiceOrderMilestoneEventMethodNotAllowed {

	return &ListenToServiceOrderMilestoneEventMethodNotAllowed{}
}

// NewListenToServiceOrderMilestoneEventMethodNotAllowed creates ListenToServiceOrderMilestoneEventMethodNotAllowedRaw with default headers values
func NewListenToServiceOrderMilestoneEventMethodNotAllowedRaw() *ListenToServiceOrderMilestoneEventMethodNotAllowedRaw {

	return &ListenToServiceOrderMilestoneEventMethodNotAllowedRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event method not allowed response
func (o *ListenToServiceOrderMilestoneEventMethodNotAllowed) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventMethodNotAllowed {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event method not allowed response
func (o *ListenToServiceOrderMilestoneEventMethodNotAllowedRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventMethodNotAllowedRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event method not allowed response
func (o *ListenToServiceOrderMilestoneEventMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventMethodNotAllowedRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventConflictCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventConflict
const ListenToServiceOrderMilestoneEventConflictCode int = 409

/*
ListenToServiceOrderMilestoneEventConflict Conflict

swagger:response listenToServiceOrderMilestoneEventConflict
*/
type ListenToServiceOrderMilestoneEventConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventConflictRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventConflict creates ListenToServiceOrderMilestoneEventConflict with default headers values
func NewListenToServiceOrderMilestoneEventConflict() *ListenToServiceOrderMilestoneEventConflict {

	return &ListenToServiceOrderMilestoneEventConflict{}
}

// NewListenToServiceOrderMilestoneEventConflict creates ListenToServiceOrderMilestoneEventConflictRaw with default headers values
func NewListenToServiceOrderMilestoneEventConflictRaw() *ListenToServiceOrderMilestoneEventConflictRaw {

	return &ListenToServiceOrderMilestoneEventConflictRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event conflict response
func (o *ListenToServiceOrderMilestoneEventConflict) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventConflict {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event conflict response
func (o *ListenToServiceOrderMilestoneEventConflictRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventConflictRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event conflict response
func (o *ListenToServiceOrderMilestoneEventConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventConflictRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Alex Server response
// ListenToServiceOrderMilestoneEventInternalServerErrorCode is the HTTP code returned for type ListenToServiceOrderMilestoneEventInternalServerError
const ListenToServiceOrderMilestoneEventInternalServerErrorCode int = 500

/*
ListenToServiceOrderMilestoneEventInternalServerError Internal Server Error

swagger:response listenToServiceOrderMilestoneEventInternalServerError
*/
type ListenToServiceOrderMilestoneEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

type ListenToServiceOrderMilestoneEventInternalServerErrorRaw struct {

	/*
	  In: Body
	*/
	Payload interface{} `json:"body,omitempty"`
}

// NewListenToServiceOrderMilestoneEventInternalServerError creates ListenToServiceOrderMilestoneEventInternalServerError with default headers values
func NewListenToServiceOrderMilestoneEventInternalServerError() *ListenToServiceOrderMilestoneEventInternalServerError {

	return &ListenToServiceOrderMilestoneEventInternalServerError{}
}

// NewListenToServiceOrderMilestoneEventInternalServerError creates ListenToServiceOrderMilestoneEventInternalServerErrorRaw with default headers values
func NewListenToServiceOrderMilestoneEventInternalServerErrorRaw() *ListenToServiceOrderMilestoneEventInternalServerErrorRaw {

	return &ListenToServiceOrderMilestoneEventInternalServerErrorRaw{}
}

// WithPayload adds the payload to the listen to service order milestone event internal server error response
func (o *ListenToServiceOrderMilestoneEventInternalServerError) WithPayload(payload *models.Error) *ListenToServiceOrderMilestoneEventInternalServerError {
	o.Payload = payload
	return o
}

// WithPayload adds the payload to the listen to service order milestone event internal server error response
func (o *ListenToServiceOrderMilestoneEventInternalServerErrorRaw) WithPayload(payload interface{}) *ListenToServiceOrderMilestoneEventInternalServerErrorRaw {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the listen to service order milestone event internal server error response
func (o *ListenToServiceOrderMilestoneEventInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListenToServiceOrderMilestoneEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// WriteResponseRaw to the client
func (o *ListenToServiceOrderMilestoneEventInternalServerErrorRaw) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
