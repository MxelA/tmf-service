// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 641 - Service Ordering Management\n\n Version 4.2.0 \n\nThe Service Order API provides a standardized mechanism for managing Service Order, a type of order which can be used to place an order between internal Customer Order management system to service order management system or between a service provider and a partner and vice versa.\n\n### Service Order resource\nA service order will describe a list of service order items.  A service order item references an action on an existing  or  future  service.  By  service  we  designed  Customer Facing  Service  (CFS)  as  well  as  Resource Facing Service (RFS).\nFrom a component perspective, a service order should be available\n- from a Service Orchestration Component (and it could mix CFS and RFS)\n- from an Infrastructure Control \u0026 Management component (and it would have only RFS)\n\n### TMF641 performs the following operations on service order resource :\n- Retrieval of a service order or a collection of service orders depending on filter criteria\n- Partial update of a service order (including updating rules)\n- Creation of a service order (including default values and creation rules)\n- Deletion of service order (for administration purposes)\n- Notification of events on Service order\n\n**Cancel Service Order resource**\n\nThis resource is used to request a service order cancellation.\n\n**TMF641 provides following operations on Cancel Service Order resource :**\n\n- Retrieval of a cancel service order or a collection of cancel service orders \n- Creation of a cancel service order \n- Notification of events on cancel service order.\n\nCopyright Â© TM Forum 2020. All Rights Reserved",
    "title": "API ServiceOrdering",
    "version": "4.2.0"
  },
  "host": "serverRoot",
  "basePath": "/tmf-api/serviceOrdering/v4",
  "paths": {
    "/cancelServiceOrder": {
      "get": {
        "description": "This operation list or find CancelServiceOrder entities",
        "tags": [
          "cancelServiceOrder"
        ],
        "summary": "List or find CancelServiceOrder objects",
        "operationId": "listCancelServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Comma-separated properties to be provided in response",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested number of resources to be provided in response",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancelServiceOrder"
              }
            },
            "headers": {
              "X-Result-Count": {
                "type": "integer",
                "description": "Actual number of items returned in the response body"
              },
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of items matching criteria"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a CancelServiceOrder entity.",
        "tags": [
          "cancelServiceOrder"
        ],
        "summary": "Creates a CancelServiceOrder",
        "operationId": "createCancelServiceOrder",
        "parameters": [
          {
            "description": "The CancelServiceOrder to be created",
            "name": "cancelServiceOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrder_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CancelServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cancelServiceOrder/{id}": {
      "get": {
        "description": "This operation retrieves a CancelServiceOrder entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "cancelServiceOrder"
        ],
        "summary": "Retrieves a CancelServiceOrder by ID",
        "operationId": "retrieveCancelServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the CancelServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Comma-separated properties to provide in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hub": {
      "post": {
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Register a listener",
        "operationId": "registerListener",
        "parameters": [
          {
            "description": "Data containing the callback endpoint to deliver the information",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscribed",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hub/{id}": {
      "delete": {
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Unregister a listener",
        "operationId": "unregisterListener",
        "parameters": [
          {
            "type": "string",
            "description": "The id of the registered listener",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/cancelServiceOrderCreateEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification CancelServiceOrderCreateEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity CancelServiceOrderCreateEvent",
        "operationId": "listenToCancelServiceOrderCreateEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrderCreateEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/cancelServiceOrderInformationRequiredEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification CancelServiceOrderInformationRequiredEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity CancelServiceOrderInformationRequiredEvent",
        "operationId": "listenToCancelServiceOrderInformationRequiredEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrderInformationRequiredEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/cancelServiceOrderStateChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification CancelServiceOrderStateChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity CancelServiceOrderStateChangeEvent",
        "operationId": "listenToCancelServiceOrderStateChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrderStateChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderAttributeValueChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderAttributeValueChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderAttributeValueChangeEvent",
        "operationId": "listenToServiceOrderAttributeValueChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderAttributeValueChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderCreateEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderCreateEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderCreateEvent",
        "operationId": "listenToServiceOrderCreateEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderCreateEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderDeleteEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderDeleteEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderDeleteEvent",
        "operationId": "listenToServiceOrderDeleteEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderDeleteEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderInformationRequiredEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderInformationRequiredEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderInformationRequiredEvent",
        "operationId": "listenToServiceOrderInformationRequiredEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderInformationRequiredEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderJeopardyEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderJeopardyEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderJeopardyEvent",
        "operationId": "listenToServiceOrderJeopardyEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderJeopardyEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderMilestoneEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderMilestoneEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderMilestoneEvent",
        "operationId": "listenToServiceOrderMilestoneEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderMilestoneEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderStateChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderStateChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderStateChangeEvent",
        "operationId": "listenToServiceOrderStateChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderStateChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/serviceOrder": {
      "get": {
        "description": "This operation list or find ServiceOrder entities",
        "tags": [
          "serviceOrder"
        ],
        "summary": "List or find ServiceOrder objects",
        "operationId": "listServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Comma-separated properties to be provided in response",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested number of resources to be provided in response",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceOrder"
              }
            },
            "headers": {
              "X-Result-Count": {
                "type": "integer",
                "description": "Actual number of items returned in the response body"
              },
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of items matching criteria"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a ServiceOrder entity.",
        "tags": [
          "serviceOrder"
        ],
        "summary": "Creates a ServiceOrder",
        "operationId": "createServiceOrder",
        "parameters": [
          {
            "description": "The ServiceOrder to be created",
            "name": "serviceOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/serviceOrder/{id}": {
      "get": {
        "description": "This operation retrieves a ServiceOrder entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "serviceOrder"
        ],
        "summary": "Retrieves a ServiceOrder by ID",
        "operationId": "retrieveServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the ServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Comma-separated properties to provide in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "This operation deletes a ServiceOrder entity.",
        "tags": [
          "serviceOrder"
        ],
        "summary": "Deletes a ServiceOrder",
        "operationId": "deleteServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the ServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "This operation updates partially a ServiceOrder entity.",
        "consumes": [
          "application/merge-patch+json",
          "application/json-patch+json"
        ],
        "tags": [
          "serviceOrder"
        ],
        "summary": "Updates partially a ServiceOrder",
        "operationId": "patchServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the ServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "The ServiceOrder to be updated",
            "name": "serviceOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder_Update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Addressable": {
      "description": "Base schema for adressable entities",
      "type": "object",
      "properties": {
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"addressable,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Any": {},
    "AppointmentRef": {
      "description": "Refers an appointment, such as a Customer presentation or internal meeting or site visit",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explanatory text regarding the appointment made with a party",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "The reference of the appointment",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "The identifier of the referred appointment",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        }
      }
    },
    "CancelOrder": {
      "description": "A Order cancel is a type of task which  can  be used to place a request to cancel an order",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled.",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "effectiveCancellationDate": {
          "description": "Date when the order is cancelled.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"effectiveCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink to access the cancellation request",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "id of the cancellation request (this is not an order id)",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "requestedCancellationDate": {
          "description": "Date when the submitter wants the order to be cancelled",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "Tracks the lifecycle status of the cancellation request, such as Acknowledged, Rejected, InProgress, Pending and so on.",
          "type": "string",
          "enum": [
            "accepted",
            "terminatedWithError",
            "inProgress",
            "done"
          ],
          "x-go-custom-tag": "bson:\"state\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrder": {
      "description": "Request for cancellation an existing Service order",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled.",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "completionMessage": {
          "description": "an optional message describing the completion of the task if it is done as expected or it is denied for a reason (like order in an state of PoNR).",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "effectiveCancellationDate": {
          "description": "Date when the order is cancelled.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"effectiveCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "errorMessage": {
          "x-go-custom-tag": "bson:\"errorMessage,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/Error"
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"_id,omitempty\"",
          "x-nullable": true
        },
        "requestedCancellationDate": {
          "description": "Date when the submitter wants the order to be cancelled",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrder": {
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceOrderRef"
        },
        "state": {
          "description": "Tracks the lifecycle status of the cancellation request, such as Acknowledged, Rejected, InProgress, Pending and so on.",
          "type": "string",
          "enum": [
            "accepted",
            "terminatedWithError",
            "inProgress",
            "done"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrderCreateEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/CancelServiceOrderCreateEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "CancelServiceOrderCreateEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "cancelServiceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"cancelServiceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrder"
        }
      }
    },
    "CancelServiceOrderInformationRequiredEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrderInformationRequiredEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"filePath,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrderInformationRequiredEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "cancelServiceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"cancelServiceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrder"
        }
      }
    },
    "CancelServiceOrderStateChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrderStateChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrderStateChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "cancelServiceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"cancelServiceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrder"
        }
      }
    },
    "CancelServiceOrder_Create": {
      "description": "Request for cancellation an existing Service order\nSkipped properties: id,href,state,effectiveCancellationDate",
      "type": "object",
      "required": [
        "serviceOrder"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@atSchemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled.",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "completionMessage": {
          "description": "an optional message describing the completion of the task if it is done as expected or it is denied for a reason (like order in an state of PoNR).",
          "type": "string",
          "x-go-custom-tag": "bson:\"completionMessage,omitempty\"",
          "x-nullable": true
        },
        "errorMessage": {
          "x-go-custom-tag": "bson:\"errorMessage\"",
          "x-nullable": true,
          "$ref": "#/definitions/Error"
        },
        "requestedCancellationDate": {
          "description": "Date when the submitter wants the order to be cancelled",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrder": {
          "x-go-custom-tag": "bson:\"serviceOrder\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceOrderRef"
        }
      }
    },
    "Characteristic": {
      "description": "Describes a given characteristic of an object or entity through a name/value pair.",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "characteristicRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CharacteristicRelationship"
          },
          "x-go-custom-tag": "bson:\"characteristicRelationship,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\"",
          "x-nullable": false
        },
        "value": {
          "description": "The value of the characteristic",
          "x-go-custom-tag": "bson:\"value\"",
          "x-nullable": false,
          "$ref": "#/definitions/Any"
        },
        "valueType": {
          "description": "Data type of the value of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"valueType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CharacteristicRelationship": {
      "description": "Another Characteristic that is related to the current Characteristic.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "description": "The type of relationship",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ConstraintRef": {
      "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "version": {
          "description": "constraint version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ContextUpdate": {
      "description": "Holds the date when the status/state last changed and provides a reason/context to the current value of the status/state. It has the relatedEntity and relatedParty in relation to the status/state value.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Identifier of the context update",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "lastUpdate": {
          "description": "The date and time the status/state last changed.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"lastUpdate,omitempty\"",
          "x-nullable": true
        },
        "reason": {
          "description": "The reason/context for the current value of the status/state.",
          "type": "string",
          "x-go-custom-tag": "bson:\"reason,omitempty\"",
          "x-nullable": true
        },
        "relatedEntity": {
          "description": "A list of entities that represent observations, anomalies or managing entities etc associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRef"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "List of parties associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Entity": {
      "description": "Base entity schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityRef": {
      "description": "Entity reference schema to be use for all entityRef class.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityValue": {
      "description": "Base entity value  schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Error": {
      "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
      "type": "object",
      "required": [
        "code",
        "reason"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class entity name.",
          "type": "string"
        },
        "code": {
          "description": "Application relevant detail, defined in the API or a common list.",
          "type": "string"
        },
        "message": {
          "description": "More details and corrective actions related to the error which can be shown to a client user.",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error which can be shown to a client user.",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error.",
          "type": "string",
          "format": "uri"
        },
        "status": {
          "description": "HTTP Error code extension",
          "type": "string"
        }
      }
    },
    "ErrorMessage": {
      "description": "represents an Error",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "message": {
          "description": "More details and corrective actions related to the error",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "EventSubscription": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "id",
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback\""
        },
        "id": {
          "description": "Id of the listener",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EventSubscriptionInput": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback\""
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Extensible": {
      "description": "Base Extensible schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        }
      }
    },
    "ExternalIdentifier": {
      "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifierType": {
          "description": "Type of the identification, typically would be the type of the entity within the external system",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalIdentifierType,omitempty\"",
          "x-nullable": true,
          "example": "ProductOrder"
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identification of the entity within the external system.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\"",
          "example": "MC2255771199555"
        },
        "owner": {
          "description": "Name of the external system that owns the entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"owner,omitempty\"",
          "x-nullable": true,
          "example": "MagentoCommerce"
        }
      }
    },
    "ExternalReference": {
      "description": "External reference of the individual or reference in other system",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "externalReferenceType": {
          "description": "Type of the external reference",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalReferenceType,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "External reference name",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\""
        }
      }
    },
    "Feature": {
      "description": "Configuration feature.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "constraint": {
          "description": "This is a list of feature constraints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstraintRef"
          },
          "x-go-custom-tag": "bson:\"constraint,omitempty\"",
          "x-nullable": true
        },
        "featureCharacteristic": {
          "description": "This is a list of Characteristics for a particular feature.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"featureCharacteristic,omitempty\"",
          "x-nullable": true
        },
        "featureRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureRelationship"
          },
          "x-go-custom-tag": "bson:\"featureRelationship,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "True if this is a feature group. Default is false.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isEnabled": {
          "description": "True if this feature is enabled. Default is true.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isEnabled,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "This is the name for the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\""
        }
      }
    },
    "FeatureRelationship": {
      "description": "Configuration feature",
      "type": "object",
      "required": [
        "name",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "This is the name of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\""
        },
        "relationshipType": {
          "description": "This is the type of the feature relationship.",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType\""
        },
        "validFor": {
          "description": "The period for which this feature relationship is valid.",
          "x-go-custom-tag": "bson:\"validFor,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/TimePeriod"
        }
      }
    },
    "JeopardyAlert": {
      "description": "A JeopardyAlert represents a predicted exception during a process that may cause a risk to complete successfully the process.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "alertDate": {
          "description": "A date time( DateTime). The date that the alert issued",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"alertDate,omitempty\"",
          "x-nullable": true
        },
        "exception": {
          "description": " The exception associated with this jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"exception,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the JeopardyAlert",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "jeopardyType": {
          "description": "A string represents the type of jeopardy/risk like Normal, Hazard, Critical, ...",
          "type": "string",
          "x-go-custom-tag": "bson:\"jeopardyType,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "JsonPatch": {
      "description": "Path  structure",
      "type": "object",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "from": {
          "description": "A string containing a JSON Pointer value.",
          "type": "string"
        },
        "op": {
          "description": "The operation to be performed",
          "type": "string"
        },
        "path": {
          "description": "A JSON-Pointer",
          "type": "string"
        },
        "value": {
          "description": "The value to be used within the operations.",
          "type": "object"
        }
      }
    },
    "Milestone": {
      "description": "Milestone represents an action or event marking a significant change or stage in a process like an order process.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "free-text description of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "milestoneDate": {
          "description": "A date time( DateTime). The date that the milestone happens",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"milestoneDate,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "status": {
          "description": "The milestone status",
          "type": "string",
          "x-go-custom-tag": "bson:\"status,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Note": {
      "description": "Extra information about a given entity",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "author": {
          "description": "Author of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"author,omitempty\"",
          "x-nullable": true,
          "example": [
            "Mr. N. Bene"
          ]
        },
        "date": {
          "description": "Date of the note",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"date,omitempty\"",
          "x-nullable": true,
          "example": [
            "2020-11-20T08:00:00Z"
          ]
        },
        "id": {
          "description": "Identifier of the note within its containing entity",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true,
          "example": [
            "afa9-3d90aaa8da0f"
          ]
        },
        "text": {
          "description": "Text of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"text\"",
          "example": [
            "This is important"
          ]
        }
      }
    },
    "OrderItemActionType": {
      "description": "action to be performed on the product",
      "type": "string",
      "enum": [
        "add",
        "modify",
        "delete",
        "noChange"
      ]
    },
    "Place": {
      "description": "Place reference. Place defines the places where the products are sold or delivered.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "PlaceRef": {
      "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedEntityRefOrValue": {
      "description": "A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role\""
        }
      }
    },
    "RelatedParty": {
      "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
      "type": "object",
      "required": [
        "@referredType",
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType\""
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "description": "Role played by the related party",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedPlaceRefOrValue": {
      "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocationType,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role\"",
          "x-nullable": true
        }
      }
    },
    "RelatedServiceOrderItem": {
      "description": "RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination.",
      "type": "object",
      "required": [
        "itemId"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "itemAction": {
          "description": "Action of the order item for this service",
          "type": "string",
          "enum": [
            "add",
            "modify",
            "delete",
            "noChange"
          ],
          "x-go-custom-tag": "bson:\"itemAction\"",
          "x-nullable": true
        },
        "itemId": {
          "description": "Identifier of the order item where the service was managed",
          "type": "string",
          "x-go-custom-tag": "bson:\"itemId\""
        },
        "role": {
          "description": "role of the service order item for this service",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderHref": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderHref,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderId": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderId,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ResourceRef": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Service": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStatefull,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "type": "string",
          "enum": [
            "pending",
            "configured",
            "starting",
            "running",
            "degraded",
            "failed",
            "limited",
            "stopping",
            "stopped",
            "unknown"
          ],
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
            "x-nullable": true,
            "$ref": "#/definitions/RelatedServiceOrderItem"
          }
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "type": "string",
          "enum": [
            "feasibilityChecked",
            "designed",
            "reserved",
            "inactive",
            "active",
            "suspended",
            "terminated"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOperatingStatusType": {
      "description": "Valid values for the Operating status of the service",
      "type": "string",
      "enum": [
        "pending",
        "configured",
        "starting",
        "running",
        "degraded",
        "failed",
        "limited",
        "stopping",
        "stopped",
        "unknown"
      ]
    },
    "ServiceOrder": {
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationDate": {
          "description": "Date when the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"cancellationDate,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Used to categorize the order, useful for the OM system, such as: Broadband, TVOption",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "completionDate": {
          "description": "Effective delivery date amended by the provider",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"completionDate,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "A free-text description of the service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "errorMessage": {
          "description": "the error message if the order closed by an error",
          "x-go-custom-tag": "bson:\"errorMessage,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderErrorMessage"
        },
        "expectedCompletionDate": {
          "description": "Expected delivery date amended by the provider",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"expectedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "externalId": {
          "description": "ID given by the consumer to facilitate searches",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalId,omitempty\"",
          "x-nullable": true
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          },
          "x-go-custom-tag": "bson:\"externalReference,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "href": {
          "description": "Hyperlink to access the order",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "ID created on repository side",
          "type": "string",
          "x-go-custom-tag": "bson:\"_id,omitempty\""
        },
        "jeopardyAlert": {
          "description": "A list of jeopardy alerts related to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderJeopardyAlert"
          },
          "x-go-custom-tag": "bson:\"jeopardyAlert,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "milestone": {
          "description": "A list of milestones related to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderMilestone"
          },
          "x-go-custom-tag": "bson:\"milestone,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "note": {
          "description": "Extra-information about the order; e.g. useful to add extra delivery information that could be useful for a human process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string",
          "x-go-custom-tag": "bson:\"notificationContact,omitempty\"",
          "x-nullable": true
        },
        "orderDate": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"orderDate,omitempty\"",
          "x-nullable": true
        },
        "orderRelationship": {
          "description": "A list of service orders related to this order (e.g. prerequisite, dependent on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderRelationship"
          },
          "x-go-custom-tag": "bson:\"orderRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "priority": {
          "description": "Can be used by consumers to prioritize orders in a Service Order Management system",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of parties which are involved in this order and the role they are playing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestors perspective",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedStartDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items to be processed by this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\""
        },
        "startDate": {
          "description": "Date when the order was started for processing",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "State of the order: described in the state-machine diagram",
          "type": "string",
          "enum": [
            "acknowledged",
            "rejected",
            "pending",
            "held",
            "inProgress",
            "cancelled",
            "completed",
            "failed",
            "partial",
            "assessingCancellation",
            "pendingCancellation"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderAttributeValueChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderAttributeValueChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"fieldPath,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderAttributeValueChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderCreateEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderCreateEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderCreateEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderDeleteEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderDeleteEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderDeleteEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderErrorMessage": {
      "description": "A ServiceOrderErrorMessage represents an error that causes a status change in a service order.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "message": {
          "description": "More details and corrective actions related to the error",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error",
          "type": "string",
          "format": "uri"
        },
        "serviceOrderItem": {
          "description": "A list of order items corresponded to this error",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRef"
          }
        },
        "status": {
          "description": "error code extension like sys-ABC-2001",
          "type": "string"
        },
        "timestamp": {
          "description": "Date when the error happened",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceOrderInformationRequiredEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderInformationRequiredEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"filePath,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderInformationRequiredEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderItem": {
      "type": "object",
      "required": [
        "id",
        "action",
        "service"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullble": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullabe": true
        },
        "action": {
          "description": "The action to be carried out on the Service. Can be: add, modify, delete, noChange",
          "type": "string",
          "enum": [
            "add",
            "modify",
            "delete",
            "noChange"
          ],
          "x-go-custom-tag": "bson:\"action,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "appointment": {
          "description": "An appointment that was set up with a related party for this order item",
          "x-go-custom-tag": "bson:\"appointment,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/AppointmentRef"
        },
        "errorMessage": {
          "description": "the error(s) cause an order item status change",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemErrorMessage"
          },
          "x-go-custom-tag": "bson:\"errorMessage,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "Identifier of the individual line item",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "modifyPath": {
          "description": "A list of modification items provided for the service update when serviceOrderItem action is modify",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonPatch"
          },
          "x-omitempty": true
        },
        "quantity": {
          "description": "Quantity ordered",
          "type": "integer",
          "x-go-custom-tag": "bson:\"quantity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "service": {
          "description": "The Service to be acted on by the order item",
          "x-go-custom-tag": "bson:\"service\"",
          "$ref": "#/definitions/ServiceRefOrValue"
        },
        "serviceOrderItem": {
          "description": "A list of order items embedded to this order item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceOrderItemRelationship": {
          "description": "A list of order items related to this order item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItemRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "state": {
          "description": "State of the order item: described in the state machine diagram. This is the requested state.",
          "type": "string",
          "enum": [
            "acknowledged",
            "rejected",
            "pending",
            "held",
            "inProgress",
            "cancelled",
            "completed",
            "failed",
            "assessingCancellation",
            "pendingCancellation",
            "partial"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderItemErrorMessage": {
      "description": "AServiceOrderItemErrorMessage represents an error that causes a status change in a service order item.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "message": {
          "description": "More details and corrective actions related to the error",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error",
          "type": "string",
          "format": "uri"
        },
        "status": {
          "description": "error code extension like sys-ABC-2001",
          "type": "string"
        },
        "timestamp": {
          "description": "Date when the error happened",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceOrderItemRef": {
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "itemId": {
          "description": "Identifier of the line item",
          "type": "string",
          "x-go-custom-tag": "bson:\"itemId\"",
          "x-nullable": false
        },
        "serviceOrderHref": {
          "description": "Link to the order to which this item belongs to",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"serviceOrderHref,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderId": {
          "description": "Identifier of the order that this item belongs to",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderId,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderItemRelationship": {
      "description": "Linked service order item to the one containing this attribute",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "orderItem": {
          "description": "A service order item in relationship with this order item",
          "x-go-custom-tag": "bson:\"orderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderItemRef"
        },
        "relationshipType": {
          "description": "The type of related order item, can be: dependency if the order item needs to be not started until another order item is complete",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderItemStateType": {
      "description": "Possible values for the state of the order item",
      "type": "string",
      "enum": [
        "acknowledged",
        "rejected",
        "pending",
        "held",
        "inProgress",
        "cancelled",
        "completed",
        "failed",
        "assessingCancellation",
        "pendingCancellation",
        "partial"
      ]
    },
    "ServiceOrderJeopardyAlert": {
      "description": "A ServiceOrderJeopardyAlert represents a predicted exception during a service order processing that would brings risk to complete successfully the ordetr.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "alertDate": {
          "description": "A date time( DateTime). The date that the alert issued",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"alertDate,omitempty\"",
          "x-nullable": true
        },
        "exception": {
          "description": " The exception associated with this jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"exception,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the JeopardyAlert",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "jeopardyType": {
          "description": "A string represents the type of jeopardy/risk like Normal, Hazard, Critical, ...",
          "type": "string",
          "x-go-custom-tag": "bson:\"jeopardyType,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of order items corresponded to this alert",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRef"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceOrderJeopardyEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderJeopardyEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderJeopardyEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderMilestone": {
      "description": "ServiceOrderMilestone represents an action or event marking a significant change or stage in processing of a service order.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "free-text description of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "milestoneDate": {
          "description": "A date time( DateTime). The date that the milestone happens",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"milestoneDate,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of order items corresponded to this milestone",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRef"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "status": {
          "description": "The milestone status",
          "type": "string",
          "x-go-custom-tag": "bson:\"status,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderMilestoneEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderMilestoneEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderMilestoneEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderRef": {
      "description": "Service Order reference. Useful to understand the which was the Service order through which the service was instantiated in the service inventory",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderRelationship": {
      "description": "Linked service order to the one containing this attribute",
      "type": "object",
      "required": [
        "id",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The entity type of the related order",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "A hyperlink to the related order",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "The id of the related order",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "relationshipType": {
          "description": "The type of related order, such as: [dependency] if the order needs to be [not started] until another order item is complete (a service order in this case) or [cross-ref] to keep track of the source order (a productOrder)",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderStateChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderStateChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderStateChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderStateType": {
      "description": "Possible values for the state of the order",
      "type": "string",
      "enum": [
        "acknowledged",
        "rejected",
        "pending",
        "held",
        "inProgress",
        "cancelled",
        "completed",
        "failed",
        "partial",
        "assessingCancellation",
        "pendingCancellation"
      ]
    },
    "ServiceOrder_Create": {
      "description": "\nSkipped properties: id,href,orderDate,completionDate,expectedCompletionDate,startDate,state,jeopardyAlert,errorMessage,milestone",
      "type": "object",
      "required": [
        "serviceOrderItem"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationDate": {
          "description": "Date when the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"cancellationDate,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Used to categorize the order, useful for the OM system, such as: Broadband, TVOption",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "A free-text description of the service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "externalId": {
          "description": "ID given by the consumer to facilitate searches",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalId,omitempty\"",
          "x-nullable": true
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          },
          "x-go-custom-tag": "bson:\"externalReference,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "Extra-information about the order; e.g. useful to add extra delivery information that could be useful for a human process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string",
          "x-go-custom-tag": "bson:\"notificationContact,omitempty\"",
          "x-nullable": true
        },
        "orderRelationship": {
          "description": "A list of service orders related to this order (e.g. prerequisite, dependent on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderRelationship"
          },
          "x-go-custom-tag": "bson:\"orderRelationShip,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "Can be used by consumers to prioritize orders in a Service Order Management system",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of parties which are involved in this order and the role they are playing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestors perspective",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedStartDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items to be processed by this order",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\""
        }
      }
    },
    "ServiceOrder_Update": {
      "description": "\nSkipped properties: id,href,orderDate,jeopardyAlert,errorMessage,milestone,@baseType,@schemaLocation,@type,cancellationDate,cancellationReason,category,completionDate,startDate",
      "type": "object",
      "properties": {
        "description": {
          "description": "A free-text description of the service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "expectedCompletionDate": {
          "description": "Expected delivery date amended by the provider",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"expectedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "externalId": {
          "description": "ID given by the consumer to facilitate searches",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalId,omitempty\"",
          "x-nullable": true
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          },
          "x-go-custom-tag": "bson:\"externalReference,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "Extra-information about the order; e.g. useful to add extra delivery information that could be useful for a human process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string",
          "x-go-custom-tag": "bson:\"notificationContact,omitempty\"",
          "x-nullable": true
        },
        "orderRelationship": {
          "description": "A list of service orders related to this order (e.g. prerequisite, dependent on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderRelationship"
          },
          "x-go-custom-tag": "bson:\"orderRelationship,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "Can be used by consumers to prioritize orders in a Service Order Management system",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of parties which are involved in this order and the role they are playing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestors perspective",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedStartDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items to be processed by this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "State of the order: described in the state-machine diagram",
          "type": "string",
          "enum": [
            "acknowledged",
            "rejected",
            "pending",
            "held",
            "inProgress",
            "cancelled",
            "completed",
            "failed",
            "partial",
            "assessingCancellation",
            "pendingCancellation"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceRef": {
      "description": "Service reference, for when Service is used by other entities",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceRefOrValue": {
      "description": "A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "type": "string",
          "enum": [
            "pending",
            "configured",
            "starting",
            "running",
            "degraded",
            "failed",
            "limited",
            "stopping",
            "stopped",
            "unknown"
          ],
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "type": "string",
          "enum": [
            "feasibilityChecked",
            "designed",
            "reserved",
            "inactive",
            "active",
            "suspended",
            "terminated"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceRelationship": {
      "type": "object",
      "required": [
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        },
        "service": {
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceRefOrValue"
        },
        "serviceRelationshipCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceRelationshipCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceSpecificationRef": {
      "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "version": {
          "description": "Service specification version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceStateType": {
      "description": "Valid values for the lifecycle state of the service",
      "type": "string",
      "enum": [
        "feasibilityChecked",
        "designed",
        "reserved",
        "inactive",
        "active",
        "suspended",
        "terminated"
      ]
    },
    "TaskStateType": {
      "description": "Possible values for the state of a task",
      "type": "string",
      "enum": [
        "accepted",
        "terminatedWithError",
        "inProgress",
        "done"
      ]
    },
    "TimePeriod": {
      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
      "type": "object",
      "properties": {
        "endDateTime": {
          "description": "End of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDateTime,omitempty\"",
          "x-nullable": true,
          "example": "1985-04-12T23:20:50.52Z"
        },
        "startDateTime": {
          "description": "Start of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDateTime,omitempty\"",
          "x-nullable": true,
          "example": "1985-04-12T23:20:50.52Z"
        }
      }
    }
  },
  "tags": [
    {
      "name": "serviceOrder"
    },
    {
      "name": "cancelServiceOrder"
    },
    {
      "name": "notification listeners (client side)"
    },
    {
      "name": "events subscription"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json;charset=utf-8"
  ],
  "produces": [
    "application/json;charset=utf-8"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "## TMF API Reference : TMF 641 - Service Ordering Management\n\n Version 4.2.0 \n\nThe Service Order API provides a standardized mechanism for managing Service Order, a type of order which can be used to place an order between internal Customer Order management system to service order management system or between a service provider and a partner and vice versa.\n\n### Service Order resource\nA service order will describe a list of service order items.  A service order item references an action on an existing  or  future  service.  By  service  we  designed  Customer Facing  Service  (CFS)  as  well  as  Resource Facing Service (RFS).\nFrom a component perspective, a service order should be available\n- from a Service Orchestration Component (and it could mix CFS and RFS)\n- from an Infrastructure Control \u0026 Management component (and it would have only RFS)\n\n### TMF641 performs the following operations on service order resource :\n- Retrieval of a service order or a collection of service orders depending on filter criteria\n- Partial update of a service order (including updating rules)\n- Creation of a service order (including default values and creation rules)\n- Deletion of service order (for administration purposes)\n- Notification of events on Service order\n\n**Cancel Service Order resource**\n\nThis resource is used to request a service order cancellation.\n\n**TMF641 provides following operations on Cancel Service Order resource :**\n\n- Retrieval of a cancel service order or a collection of cancel service orders \n- Creation of a cancel service order \n- Notification of events on cancel service order.\n\nCopyright Â© TM Forum 2020. All Rights Reserved",
    "title": "API ServiceOrdering",
    "version": "4.2.0"
  },
  "host": "serverRoot",
  "basePath": "/tmf-api/serviceOrdering/v4",
  "paths": {
    "/cancelServiceOrder": {
      "get": {
        "description": "This operation list or find CancelServiceOrder entities",
        "tags": [
          "cancelServiceOrder"
        ],
        "summary": "List or find CancelServiceOrder objects",
        "operationId": "listCancelServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Comma-separated properties to be provided in response",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested number of resources to be provided in response",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CancelServiceOrder"
              }
            },
            "headers": {
              "X-Result-Count": {
                "type": "integer",
                "description": "Actual number of items returned in the response body"
              },
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of items matching criteria"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a CancelServiceOrder entity.",
        "tags": [
          "cancelServiceOrder"
        ],
        "summary": "Creates a CancelServiceOrder",
        "operationId": "createCancelServiceOrder",
        "parameters": [
          {
            "description": "The CancelServiceOrder to be created",
            "name": "cancelServiceOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrder_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CancelServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/cancelServiceOrder/{id}": {
      "get": {
        "description": "This operation retrieves a CancelServiceOrder entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "cancelServiceOrder"
        ],
        "summary": "Retrieves a CancelServiceOrder by ID",
        "operationId": "retrieveCancelServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the CancelServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Comma-separated properties to provide in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CancelServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hub": {
      "post": {
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Register a listener",
        "operationId": "registerListener",
        "parameters": [
          {
            "description": "Data containing the callback endpoint to deliver the information",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscribed",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/hub/{id}": {
      "delete": {
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "tags": [
          "events subscription"
        ],
        "summary": "Unregister a listener",
        "operationId": "unregisterListener",
        "parameters": [
          {
            "type": "string",
            "description": "The id of the registered listener",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/cancelServiceOrderCreateEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification CancelServiceOrderCreateEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity CancelServiceOrderCreateEvent",
        "operationId": "listenToCancelServiceOrderCreateEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrderCreateEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/cancelServiceOrderInformationRequiredEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification CancelServiceOrderInformationRequiredEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity CancelServiceOrderInformationRequiredEvent",
        "operationId": "listenToCancelServiceOrderInformationRequiredEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrderInformationRequiredEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/cancelServiceOrderStateChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification CancelServiceOrderStateChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity CancelServiceOrderStateChangeEvent",
        "operationId": "listenToCancelServiceOrderStateChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CancelServiceOrderStateChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderAttributeValueChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderAttributeValueChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderAttributeValueChangeEvent",
        "operationId": "listenToServiceOrderAttributeValueChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderAttributeValueChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderCreateEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderCreateEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderCreateEvent",
        "operationId": "listenToServiceOrderCreateEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderCreateEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderDeleteEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderDeleteEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderDeleteEvent",
        "operationId": "listenToServiceOrderDeleteEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderDeleteEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderInformationRequiredEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderInformationRequiredEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderInformationRequiredEvent",
        "operationId": "listenToServiceOrderInformationRequiredEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderInformationRequiredEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderJeopardyEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderJeopardyEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderJeopardyEvent",
        "operationId": "listenToServiceOrderJeopardyEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderJeopardyEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderMilestoneEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderMilestoneEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderMilestoneEvent",
        "operationId": "listenToServiceOrderMilestoneEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderMilestoneEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/listener/serviceOrderStateChangeEvent": {
      "post": {
        "description": "Example of a client listener for receiving the notification ServiceOrderStateChangeEvent",
        "tags": [
          "notification listeners (client side)"
        ],
        "summary": "Client listener for entity ServiceOrderStateChangeEvent",
        "operationId": "listenToServiceOrderStateChangeEvent",
        "parameters": [
          {
            "description": "The event data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrderStateChangeEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notified",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/serviceOrder": {
      "get": {
        "description": "This operation list or find ServiceOrder entities",
        "tags": [
          "serviceOrder"
        ],
        "summary": "List or find ServiceOrder objects",
        "operationId": "listServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Comma-separated properties to be provided in response",
            "name": "fields",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested index for start of resources to be provided in response",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Requested number of resources to be provided in response",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceOrder"
              }
            },
            "headers": {
              "X-Result-Count": {
                "type": "integer",
                "description": "Actual number of items returned in the response body"
              },
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of items matching criteria"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "description": "This operation creates a ServiceOrder entity.",
        "tags": [
          "serviceOrder"
        ],
        "summary": "Creates a ServiceOrder",
        "operationId": "createServiceOrder",
        "parameters": [
          {
            "description": "The ServiceOrder to be created",
            "name": "serviceOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder_Create"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/serviceOrder/{id}": {
      "get": {
        "description": "This operation retrieves a ServiceOrder entity. Attribute selection is enabled for all first level attributes.",
        "tags": [
          "serviceOrder"
        ],
        "summary": "Retrieves a ServiceOrder by ID",
        "operationId": "retrieveServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the ServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Comma-separated properties to provide in response",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "This operation deletes a ServiceOrder entity.",
        "tags": [
          "serviceOrder"
        ],
        "summary": "Deletes a ServiceOrder",
        "operationId": "deleteServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the ServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "patch": {
        "description": "This operation updates partially a ServiceOrder entity.",
        "consumes": [
          "application/merge-patch+json",
          "application/json-patch+json"
        ],
        "tags": [
          "serviceOrder"
        ],
        "summary": "Updates partially a ServiceOrder",
        "operationId": "patchServiceOrder",
        "parameters": [
          {
            "type": "string",
            "description": "Identifier of the ServiceOrder",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "The ServiceOrder to be updated",
            "name": "serviceOrder",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder_Update"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Addressable": {
      "description": "Base schema for adressable entities",
      "type": "object",
      "properties": {
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"addressable,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Any": {},
    "AppointmentRef": {
      "description": "Refers an appointment, such as a Customer presentation or internal meeting or site visit",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explanatory text regarding the appointment made with a party",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "The reference of the appointment",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "The identifier of the referred appointment",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        }
      }
    },
    "CancelOrder": {
      "description": "A Order cancel is a type of task which  can  be used to place a request to cancel an order",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled.",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "effectiveCancellationDate": {
          "description": "Date when the order is cancelled.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"effectiveCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink to access the cancellation request",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "id of the cancellation request (this is not an order id)",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "requestedCancellationDate": {
          "description": "Date when the submitter wants the order to be cancelled",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "Tracks the lifecycle status of the cancellation request, such as Acknowledged, Rejected, InProgress, Pending and so on.",
          "type": "string",
          "enum": [
            "accepted",
            "terminatedWithError",
            "inProgress",
            "done"
          ],
          "x-go-custom-tag": "bson:\"state\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrder": {
      "description": "Request for cancellation an existing Service order",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled.",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "completionMessage": {
          "description": "an optional message describing the completion of the task if it is done as expected or it is denied for a reason (like order in an state of PoNR).",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "effectiveCancellationDate": {
          "description": "Date when the order is cancelled.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"effectiveCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "errorMessage": {
          "x-go-custom-tag": "bson:\"errorMessage,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/Error"
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"_id,omitempty\"",
          "x-nullable": true
        },
        "requestedCancellationDate": {
          "description": "Date when the submitter wants the order to be cancelled",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrder": {
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceOrderRef"
        },
        "state": {
          "description": "Tracks the lifecycle status of the cancellation request, such as Acknowledged, Rejected, InProgress, Pending and so on.",
          "type": "string",
          "enum": [
            "accepted",
            "terminatedWithError",
            "inProgress",
            "done"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrderCreateEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/CancelServiceOrderCreateEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "CancelServiceOrderCreateEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "cancelServiceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"cancelServiceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrder"
        }
      }
    },
    "CancelServiceOrderInformationRequiredEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrderInformationRequiredEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"filePath,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrderInformationRequiredEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "cancelServiceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"cancelServiceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrder"
        }
      }
    },
    "CancelServiceOrderStateChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrderStateChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CancelServiceOrderStateChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "cancelServiceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"cancelServiceOrder,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/CancelServiceOrder"
        }
      }
    },
    "CancelServiceOrder_Create": {
      "description": "Request for cancellation an existing Service order\nSkipped properties: id,href,state,effectiveCancellationDate",
      "type": "object",
      "required": [
        "serviceOrder"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@atSchemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled.",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "completionMessage": {
          "description": "an optional message describing the completion of the task if it is done as expected or it is denied for a reason (like order in an state of PoNR).",
          "type": "string",
          "x-go-custom-tag": "bson:\"completionMessage,omitempty\"",
          "x-nullable": true
        },
        "errorMessage": {
          "x-go-custom-tag": "bson:\"errorMessage\"",
          "x-nullable": true,
          "$ref": "#/definitions/Error"
        },
        "requestedCancellationDate": {
          "description": "Date when the submitter wants the order to be cancelled",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCancellationDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrder": {
          "x-go-custom-tag": "bson:\"serviceOrder\"",
          "x-nullable": false,
          "$ref": "#/definitions/ServiceOrderRef"
        }
      }
    },
    "Characteristic": {
      "description": "Describes a given characteristic of an object or entity through a name/value pair.",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "characteristicRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CharacteristicRelationship"
          },
          "x-go-custom-tag": "bson:\"characteristicRelationship,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\"",
          "x-nullable": false
        },
        "value": {
          "description": "The value of the characteristic",
          "x-go-custom-tag": "bson:\"value\"",
          "x-nullable": false,
          "$ref": "#/definitions/Any"
        },
        "valueType": {
          "description": "Data type of the value of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"valueType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "CharacteristicRelationship": {
      "description": "Another Characteristic that is related to the current Characteristic.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the characteristic",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "description": "The type of relationship",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ConstraintRef": {
      "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "version": {
          "description": "constraint version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ContextUpdate": {
      "description": "Holds the date when the status/state last changed and provides a reason/context to the current value of the status/state. It has the relatedEntity and relatedParty in relation to the status/state value.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Identifier of the context update",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "lastUpdate": {
          "description": "The date and time the status/state last changed.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"lastUpdate,omitempty\"",
          "x-nullable": true
        },
        "reason": {
          "description": "The reason/context for the current value of the status/state.",
          "type": "string",
          "x-go-custom-tag": "bson:\"reason,omitempty\"",
          "x-nullable": true
        },
        "relatedEntity": {
          "description": "A list of entities that represent observations, anomalies or managing entities etc associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityRef"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "List of parties associated to the current status/state value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Entity": {
      "description": "Base entity schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityRef": {
      "description": "Entity reference schema to be use for all entityRef class.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\"",
          "x-nullable": false
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EntityValue": {
      "description": "Base entity value  schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Error": {
      "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
      "type": "object",
      "required": [
        "code",
        "reason"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class.",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class entity name.",
          "type": "string"
        },
        "code": {
          "description": "Application relevant detail, defined in the API or a common list.",
          "type": "string"
        },
        "message": {
          "description": "More details and corrective actions related to the error which can be shown to a client user.",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error which can be shown to a client user.",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error.",
          "type": "string",
          "format": "uri"
        },
        "status": {
          "description": "HTTP Error code extension",
          "type": "string"
        }
      }
    },
    "ErrorMessage": {
      "description": "represents an Error",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "message": {
          "description": "More details and corrective actions related to the error",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "EventSubscription": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "id",
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback\""
        },
        "id": {
          "description": "Id of the listener",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "EventSubscriptionInput": {
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "description": "The callback being registered.",
          "type": "string",
          "x-go-custom-tag": "bson:\"callback\""
        },
        "query": {
          "description": "additional data to be passed",
          "type": "string",
          "x-go-custom-tag": "bson:\"query,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Extensible": {
      "description": "Base Extensible schema for use in TMForum Open-APIs",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        }
      }
    },
    "ExternalIdentifier": {
      "description": "An identification of an entity that is owned by or originates in a software system different from the current system, for example a ProductOrder handed off from a commerce platform into an order handling system. The structure identifies the system itself, the nature of the entity within the system (e.g. class name) and the unique ID of the entity within the system. It is anticipated that multiple external IDs can be held for a single entity, e.g. if the entity passed through multiple systems on the way to the current system. In this case the consumer is expected to sequence the IDs in the array in reverse order of provenance, i.e. most recent system first in the list.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifierType": {
          "description": "Type of the identification, typically would be the type of the entity within the external system",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalIdentifierType,omitempty\"",
          "x-nullable": true,
          "example": "ProductOrder"
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identification of the entity within the external system.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\"",
          "example": "MC2255771199555"
        },
        "owner": {
          "description": "Name of the external system that owns the entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"owner,omitempty\"",
          "x-nullable": true,
          "example": "MagentoCommerce"
        }
      }
    },
    "ExternalReference": {
      "description": "External reference of the individual or reference in other system",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "externalReferenceType": {
          "description": "Type of the external reference",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalReferenceType,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "External reference name",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\""
        }
      }
    },
    "Feature": {
      "description": "Configuration feature.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "constraint": {
          "description": "This is a list of feature constraints.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConstraintRef"
          },
          "x-go-custom-tag": "bson:\"constraint,omitempty\"",
          "x-nullable": true
        },
        "featureCharacteristic": {
          "description": "This is a list of Characteristics for a particular feature.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"featureCharacteristic,omitempty\"",
          "x-nullable": true
        },
        "featureRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureRelationship"
          },
          "x-go-custom-tag": "bson:\"featureRelationship,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "True if this is a feature group. Default is false.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isEnabled": {
          "description": "True if this feature is enabled. Default is true.",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isEnabled,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "This is the name for the feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\""
        }
      }
    },
    "FeatureRelationship": {
      "description": "Configuration feature",
      "type": "object",
      "required": [
        "name",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "This is the name of the target feature.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name\""
        },
        "relationshipType": {
          "description": "This is the type of the feature relationship.",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType\""
        },
        "validFor": {
          "description": "The period for which this feature relationship is valid.",
          "x-go-custom-tag": "bson:\"validFor,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/TimePeriod"
        }
      }
    },
    "JeopardyAlert": {
      "description": "A JeopardyAlert represents a predicted exception during a process that may cause a risk to complete successfully the process.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "alertDate": {
          "description": "A date time( DateTime). The date that the alert issued",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"alertDate,omitempty\"",
          "x-nullable": true
        },
        "exception": {
          "description": " The exception associated with this jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"exception,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the JeopardyAlert",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "jeopardyType": {
          "description": "A string represents the type of jeopardy/risk like Normal, Hazard, Critical, ...",
          "type": "string",
          "x-go-custom-tag": "bson:\"jeopardyType,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "JsonPatch": {
      "description": "Path  structure",
      "type": "object",
      "required": [
        "op",
        "path"
      ],
      "properties": {
        "from": {
          "description": "A string containing a JSON Pointer value.",
          "type": "string"
        },
        "op": {
          "description": "The operation to be performed",
          "type": "string"
        },
        "path": {
          "description": "A JSON-Pointer",
          "type": "string"
        },
        "value": {
          "description": "The value to be used within the operations.",
          "type": "object"
        }
      }
    },
    "Milestone": {
      "description": "Milestone represents an action or event marking a significant change or stage in a process like an order process.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "free-text description of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "milestoneDate": {
          "description": "A date time( DateTime). The date that the milestone happens",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"milestoneDate,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "status": {
          "description": "The milestone status",
          "type": "string",
          "x-go-custom-tag": "bson:\"status,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Note": {
      "description": "Extra information about a given entity",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "author": {
          "description": "Author of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"author,omitempty\"",
          "x-nullable": true,
          "example": [
            "Mr. N. Bene"
          ]
        },
        "date": {
          "description": "Date of the note",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"date,omitempty\"",
          "x-nullable": true,
          "example": [
            "2020-11-20T08:00:00Z"
          ]
        },
        "id": {
          "description": "Identifier of the note within its containing entity",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true,
          "example": [
            "afa9-3d90aaa8da0f"
          ]
        },
        "text": {
          "description": "Text of the note",
          "type": "string",
          "x-go-custom-tag": "bson:\"text\"",
          "example": [
            "This is important"
          ]
        }
      }
    },
    "OrderItemActionType": {
      "description": "action to be performed on the product",
      "type": "string",
      "enum": [
        "add",
        "modify",
        "delete",
        "noChange"
      ]
    },
    "Place": {
      "description": "Place reference. Place defines the places where the products are sold or delivered.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "PlaceRef": {
      "description": "Place reference. PlaceRef defines the placeRefs where the products are sold or delivered.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedEntityRefOrValue": {
      "description": "A reference to an entity, where the type of the entity is not known in advance. A related entity defines a entity described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Entity and not the RelatedEntityRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role\""
        }
      }
    },
    "RelatedParty": {
      "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
      "type": "object",
      "required": [
        "@referredType",
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType\""
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "description": "Role played by the related party",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "RelatedPlaceRefOrValue": {
      "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocationType,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Unique reference of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the place",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "role": {
          "type": "string",
          "x-go-custom-tag": "bson:\"role\"",
          "x-nullable": true
        }
      }
    },
    "RelatedServiceOrderItem": {
      "description": "RelatedServiceOrderItem (a ServiceOrder item) .The service order item which triggered service creation/change/termination.",
      "type": "object",
      "required": [
        "itemId"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "itemAction": {
          "description": "Action of the order item for this service",
          "type": "string",
          "enum": [
            "add",
            "modify",
            "delete",
            "noChange"
          ],
          "x-go-custom-tag": "bson:\"itemAction\"",
          "x-nullable": true
        },
        "itemId": {
          "description": "Identifier of the order item where the service was managed",
          "type": "string",
          "x-go-custom-tag": "bson:\"itemId\""
        },
        "role": {
          "description": "role of the service order item for this service",
          "type": "string",
          "x-go-custom-tag": "bson:\"role,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderHref": {
          "description": "Reference of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderHref,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderId": {
          "description": "Unique identifier of a related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderId,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ResourceRef": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "Service": {
      "description": "Service is a base class for defining the Service hierarchy. All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStatefull,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "type": "string",
          "enum": [
            "pending",
            "configured",
            "starting",
            "running",
            "degraded",
            "failed",
            "limited",
            "stopping",
            "stopped",
            "unknown"
          ],
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
            "x-nullable": true,
            "$ref": "#/definitions/RelatedServiceOrderItem"
          }
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "type": "string",
          "enum": [
            "feasibilityChecked",
            "designed",
            "reserved",
            "inactive",
            "active",
            "suspended",
            "terminated"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOperatingStatusType": {
      "description": "Valid values for the Operating status of the service",
      "type": "string",
      "enum": [
        "pending",
        "configured",
        "starting",
        "running",
        "degraded",
        "failed",
        "limited",
        "stopping",
        "stopped",
        "unknown"
      ]
    },
    "ServiceOrder": {
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationDate": {
          "description": "Date when the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"cancellationDate,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Used to categorize the order, useful for the OM system, such as: Broadband, TVOption",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "completionDate": {
          "description": "Effective delivery date amended by the provider",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"completionDate,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "A free-text description of the service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "errorMessage": {
          "description": "the error message if the order closed by an error",
          "x-go-custom-tag": "bson:\"errorMessage,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderErrorMessage"
        },
        "expectedCompletionDate": {
          "description": "Expected delivery date amended by the provider",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"expectedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "externalId": {
          "description": "ID given by the consumer to facilitate searches",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalId,omitempty\"",
          "x-nullable": true
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          },
          "x-go-custom-tag": "bson:\"externalReference,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "href": {
          "description": "Hyperlink to access the order",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "ID created on repository side",
          "type": "string",
          "x-go-custom-tag": "bson:\"_id,omitempty\""
        },
        "jeopardyAlert": {
          "description": "A list of jeopardy alerts related to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderJeopardyAlert"
          },
          "x-go-custom-tag": "bson:\"jeopardyAlert,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "milestone": {
          "description": "A list of milestones related to this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderMilestone"
          },
          "x-go-custom-tag": "bson:\"milestone,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "note": {
          "description": "Extra-information about the order; e.g. useful to add extra delivery information that could be useful for a human process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string",
          "x-go-custom-tag": "bson:\"notificationContact,omitempty\"",
          "x-nullable": true
        },
        "orderDate": {
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"orderDate,omitempty\"",
          "x-nullable": true
        },
        "orderRelationship": {
          "description": "A list of service orders related to this order (e.g. prerequisite, dependent on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderRelationship"
          },
          "x-go-custom-tag": "bson:\"orderRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "priority": {
          "description": "Can be used by consumers to prioritize orders in a Service Order Management system",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of parties which are involved in this order and the role they are playing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestors perspective",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedStartDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items to be processed by this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\""
        },
        "startDate": {
          "description": "Date when the order was started for processing",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "State of the order: described in the state-machine diagram",
          "type": "string",
          "enum": [
            "acknowledged",
            "rejected",
            "pending",
            "held",
            "inProgress",
            "cancelled",
            "completed",
            "failed",
            "partial",
            "assessingCancellation",
            "pendingCancellation"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderAttributeValueChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderAttributeValueChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"fieldPath,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderAttributeValueChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderCreateEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderCreateEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderCreateEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderDeleteEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderDeleteEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderDeleteEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderErrorMessage": {
      "description": "A ServiceOrderErrorMessage represents an error that causes a status change in a service order.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "message": {
          "description": "More details and corrective actions related to the error",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error",
          "type": "string",
          "format": "uri"
        },
        "serviceOrderItem": {
          "description": "A list of order items corresponded to this error",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRef"
          }
        },
        "status": {
          "description": "error code extension like sys-ABC-2001",
          "type": "string"
        },
        "timestamp": {
          "description": "Date when the error happened",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceOrderInformationRequiredEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderInformationRequiredEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "fieldPath": {
          "description": "The path identifying the object field concerned by this notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"filePath,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderInformationRequiredEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderItem": {
      "type": "object",
      "required": [
        "id",
        "action",
        "service"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullble": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullabe": true
        },
        "action": {
          "description": "The action to be carried out on the Service. Can be: add, modify, delete, noChange",
          "type": "string",
          "enum": [
            "add",
            "modify",
            "delete",
            "noChange"
          ],
          "x-go-custom-tag": "bson:\"action,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "appointment": {
          "description": "An appointment that was set up with a related party for this order item",
          "x-go-custom-tag": "bson:\"appointment,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/AppointmentRef"
        },
        "errorMessage": {
          "description": "the error(s) cause an order item status change",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemErrorMessage"
          },
          "x-go-custom-tag": "bson:\"errorMessage,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "id": {
          "description": "Identifier of the individual line item",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "modifyPath": {
          "description": "A list of modification items provided for the service update when serviceOrderItem action is modify",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonPatch"
          },
          "x-omitempty": true
        },
        "quantity": {
          "description": "Quantity ordered",
          "type": "integer",
          "x-go-custom-tag": "bson:\"quantity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "service": {
          "description": "The Service to be acted on by the order item",
          "x-go-custom-tag": "bson:\"service\"",
          "$ref": "#/definitions/ServiceRefOrValue"
        },
        "serviceOrderItem": {
          "description": "A list of order items embedded to this order item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceOrderItemRelationship": {
          "description": "A list of order items related to this order item",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItemRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "state": {
          "description": "State of the order item: described in the state machine diagram. This is the requested state.",
          "type": "string",
          "enum": [
            "acknowledged",
            "rejected",
            "pending",
            "held",
            "inProgress",
            "cancelled",
            "completed",
            "failed",
            "assessingCancellation",
            "pendingCancellation",
            "partial"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderItemErrorMessage": {
      "description": "AServiceOrderItemErrorMessage represents an error that causes a status change in a service order item.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string"
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri"
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string"
        },
        "code": {
          "description": "error code",
          "type": "integer"
        },
        "message": {
          "description": "More details and corrective actions related to the error",
          "type": "string"
        },
        "reason": {
          "description": "Explanation of the reason for the error",
          "type": "string"
        },
        "referenceError": {
          "description": "URI of documentation describing the error",
          "type": "string",
          "format": "uri"
        },
        "status": {
          "description": "error code extension like sys-ABC-2001",
          "type": "string"
        },
        "timestamp": {
          "description": "Date when the error happened",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceOrderItemRef": {
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "itemId": {
          "description": "Identifier of the line item",
          "type": "string",
          "x-go-custom-tag": "bson:\"itemId\"",
          "x-nullable": false
        },
        "serviceOrderHref": {
          "description": "Link to the order to which this item belongs to",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"serviceOrderHref,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderId": {
          "description": "Identifier of the order that this item belongs to",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceOrderId,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderItemRelationship": {
      "description": "Linked service order item to the one containing this attribute",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "orderItem": {
          "description": "A service order item in relationship with this order item",
          "x-go-custom-tag": "bson:\"orderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderItemRef"
        },
        "relationshipType": {
          "description": "The type of related order item, can be: dependency if the order item needs to be not started until another order item is complete",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderItemStateType": {
      "description": "Possible values for the state of the order item",
      "type": "string",
      "enum": [
        "acknowledged",
        "rejected",
        "pending",
        "held",
        "inProgress",
        "cancelled",
        "completed",
        "failed",
        "assessingCancellation",
        "pendingCancellation",
        "partial"
      ]
    },
    "ServiceOrderJeopardyAlert": {
      "description": "A ServiceOrderJeopardyAlert represents a predicted exception during a service order processing that would brings risk to complete successfully the ordetr.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "alertDate": {
          "description": "A date time( DateTime). The date that the alert issued",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"alertDate,omitempty\"",
          "x-nullable": true
        },
        "exception": {
          "description": " The exception associated with this jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"exception,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the JeopardyAlert",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "jeopardyType": {
          "description": "A string represents the type of jeopardy/risk like Normal, Hazard, Critical, ...",
          "type": "string",
          "x-go-custom-tag": "bson:\"jeopardyType,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the jeopardy alert",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of order items corresponded to this alert",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRef"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceOrderJeopardyEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderJeopardyEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderJeopardyEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderMilestone": {
      "description": "ServiceOrderMilestone represents an action or event marking a significant change or stage in processing of a service order.",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "free-text description of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "identifier of the Milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "message": {
          "description": "A string represents the message of the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"message,omitempty\"",
          "x-nullable": true
        },
        "milestoneDate": {
          "description": "A date time( DateTime). The date that the milestone happens",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"milestoneDate,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "A string used to give a name to the milestone",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of order items corresponded to this milestone",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItemRef"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "status": {
          "description": "The milestone status",
          "type": "string",
          "x-go-custom-tag": "bson:\"status,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderMilestoneEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderMilestoneEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderMilestoneEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderRef": {
      "description": "Service Order reference. Useful to understand the which was the Service order through which the service was instantiated in the service inventory",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderRelationship": {
      "description": "Linked service order to the one containing this attribute",
      "type": "object",
      "required": [
        "id",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The entity type of the related order",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "A hyperlink to the related order",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "The id of the related order",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "relationshipType": {
          "description": "The type of related order, such as: [dependency] if the order needs to be [not started] until another order item is complete (a service order in this case) or [cross-ref] to keep track of the source order (a productOrder)",
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderStateChangeEvent": {
      "description": "The notification data structure",
      "type": "object",
      "properties": {
        "correlationId": {
          "description": "The correlation id for this event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"correlationId,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "An explnatory of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "domain": {
          "description": "The domain of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"domain,omitempty\"",
          "x-nullable": true
        },
        "event": {
          "description": "The event payload linked to the involved resource object",
          "x-go-custom-tag": "bson:\"event,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrderStateChangeEventPayload"
        },
        "eventId": {
          "description": "The identifier of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventId,omitempty\"",
          "x-nullable": true
        },
        "eventTime": {
          "description": "Time of the event occurrence.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"eventTime,omitempty\"",
          "x-nullable": true
        },
        "eventType": {
          "description": "The type of the notification.",
          "type": "string",
          "x-go-custom-tag": "bson:\"eventType,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "A priority.",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "timeOcurred": {
          "description": "The time the event occured.",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"timeOcurred,omitempty\"",
          "x-nullable": true
        },
        "title": {
          "description": "The title of the event.",
          "type": "string",
          "x-go-custom-tag": "bson:\"title,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceOrderStateChangeEventPayload": {
      "description": "The event data structure",
      "type": "object",
      "properties": {
        "serviceOrder": {
          "description": "The involved resource data for the event",
          "x-go-custom-tag": "bson:\"serviceOrder,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceOrder"
        }
      }
    },
    "ServiceOrderStateType": {
      "description": "Possible values for the state of the order",
      "type": "string",
      "enum": [
        "acknowledged",
        "rejected",
        "pending",
        "held",
        "inProgress",
        "cancelled",
        "completed",
        "failed",
        "partial",
        "assessingCancellation",
        "pendingCancellation"
      ]
    },
    "ServiceOrder_Create": {
      "description": "\nSkipped properties: id,href,orderDate,completionDate,expectedCompletionDate,startDate,state,jeopardyAlert,errorMessage,milestone",
      "type": "object",
      "required": [
        "serviceOrderItem"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "cancellationDate": {
          "description": "Date when the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"cancellationDate,omitempty\"",
          "x-nullable": true
        },
        "cancellationReason": {
          "description": "Reason why the order is cancelled. This is used when order is cancelled. ",
          "type": "string",
          "x-go-custom-tag": "bson:\"cancellationReason,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Used to categorize the order, useful for the OM system, such as: Broadband, TVOption",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "A free-text description of the service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "externalId": {
          "description": "ID given by the consumer to facilitate searches",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalId,omitempty\"",
          "x-nullable": true
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          },
          "x-go-custom-tag": "bson:\"externalReference,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "Extra-information about the order; e.g. useful to add extra delivery information that could be useful for a human process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string",
          "x-go-custom-tag": "bson:\"notificationContact,omitempty\"",
          "x-nullable": true
        },
        "orderRelationship": {
          "description": "A list of service orders related to this order (e.g. prerequisite, dependent on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderRelationship"
          },
          "x-go-custom-tag": "bson:\"orderRelationShip,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "Can be used by consumers to prioritize orders in a Service Order Management system",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of parties which are involved in this order and the role they are playing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestors perspective",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedStartDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items to be processed by this order",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem\""
        }
      }
    },
    "ServiceOrder_Update": {
      "description": "\nSkipped properties: id,href,orderDate,jeopardyAlert,errorMessage,milestone,@baseType,@schemaLocation,@type,cancellationDate,cancellationReason,category,completionDate,startDate",
      "type": "object",
      "properties": {
        "description": {
          "description": "A free-text description of the service order",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "expectedCompletionDate": {
          "description": "Expected delivery date amended by the provider",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"expectedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "externalId": {
          "description": "ID given by the consumer to facilitate searches",
          "type": "string",
          "x-go-custom-tag": "bson:\"externalId,omitempty\"",
          "x-nullable": true
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          },
          "x-go-custom-tag": "bson:\"externalReference,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "Extra-information about the order; e.g. useful to add extra delivery information that could be useful for a human process",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true
        },
        "notificationContact": {
          "description": "Contact attached to the order to send back information regarding this order",
          "type": "string",
          "x-go-custom-tag": "bson:\"notificationContact,omitempty\"",
          "x-nullable": true
        },
        "orderRelationship": {
          "description": "A list of service orders related to this order (e.g. prerequisite, dependent on)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderRelationship"
          },
          "x-go-custom-tag": "bson:\"orderRelationship,omitempty\"",
          "x-nullable": true
        },
        "priority": {
          "description": "Can be used by consumers to prioritize orders in a Service Order Management system",
          "type": "string",
          "x-go-custom-tag": "bson:\"priority,omitempty\"",
          "x-nullable": true
        },
        "relatedParty": {
          "description": "A list of parties which are involved in this order and the role they are playing",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true
        },
        "requestedCompletionDate": {
          "description": "Requested delivery date from the requestors perspective",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedCompletionDate,omitempty\"",
          "x-nullable": true
        },
        "requestedStartDate": {
          "description": "Order start date wished by the requestor",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"requestedStartDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items to be processed by this order",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "State of the order: described in the state-machine diagram",
          "type": "string",
          "enum": [
            "acknowledged",
            "rejected",
            "pending",
            "held",
            "inProgress",
            "cancelled",
            "completed",
            "failed",
            "partial",
            "assessingCancellation",
            "pendingCancellation"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceRef": {
      "description": "Service reference, for when Service is used by other entities",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceRefOrValue": {
      "description": "A Service to be created defined by value or existing defined by reference. The polymorphic attributes @type, @schemaLocation \u0026 @referredType are related to the Service entity and not the RelatedServiceRefOrValue class itself",
      "type": "object",
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "category": {
          "description": "Is it a customer facing or resource facing service",
          "type": "string",
          "x-go-custom-tag": "bson:\"category,omitempty\"",
          "x-nullable": true
        },
        "description": {
          "description": "Free-text description of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"description,omitempty\"",
          "x-nullable": true
        },
        "endDate": {
          "description": "Date when the service ends",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDate,omitempty\"",
          "x-nullable": true
        },
        "externalIdentifier": {
          "description": "A list of external identifiers assoicated with this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalIdentifier"
          },
          "x-go-custom-tag": "bson:\"externalIdentifier,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "feature": {
          "description": "A list of feature associated with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          },
          "x-go-custom-tag": "bson:\"feature,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "hasStarted": {
          "description": "If TRUE, this Service has already been started",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"hasStarted,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Reference of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "Unique identifier of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"id,omitempty\"",
          "x-nullable": true
        },
        "isBundle": {
          "description": "If true, the service is a ServiceBundle which regroup a service hierachy. If false, the service is a 'atomic' service (hierachy leaf).",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isBundle,omitempty\"",
          "x-nullable": true
        },
        "isServiceEnabled": {
          "description": "If FALSE and hasStarted is FALSE, this particular Service has NOT been enabled for use - if FALSE and hasStarted is TRUE then the service has failed ",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isServiceEnabled,omitempty\"",
          "x-nullable": true
        },
        "isStateful": {
          "description": "If TRUE, this Service can be changed without affecting any other services",
          "type": "boolean",
          "x-go-custom-tag": "bson:\"isStateful,omitempty\"",
          "x-nullable": true
        },
        "name": {
          "description": "Name of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "note": {
          "description": "A list of notes made on this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          },
          "x-go-custom-tag": "bson:\"note,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "operatingStatus": {
          "description": "Indicates how a service is currently performing or operating. It is a logical representation of the service operating behaviour and is determined/managed by the service provider.",
          "type": "string",
          "enum": [
            "pending",
            "configured",
            "starting",
            "running",
            "degraded",
            "failed",
            "limited",
            "stopping",
            "stopped",
            "unknown"
          ],
          "x-go-custom-tag": "bson:\"operatingStatus,omitempty\"",
          "x-nullable": true
        },
        "operatingStatusContextUpdate": {
          "description": "Additional information describing the context of operatingStatus and is determined/managed by the service provider.",
          "x-go-custom-tag": "bson:\"operatingStatusContextUpdate,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ContextUpdate"
        },
        "place": {
          "description": "A list of places (Place [*]). Used to define a place useful for the service (for example a geographical place whre the service is installed)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedPlaceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"place,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedEntity": {
          "description": "A list of related  entity in relationship with this service ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedEntityRefOrValue"
          },
          "x-go-custom-tag": "bson:\"relatedEntity,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "relatedParty": {
          "description": "A list of related party references (RelatedParty [*]). A related party defines party or party role linked to a specific entity",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          },
          "x-go-custom-tag": "bson:\"relatedParty,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceCharacteristic": {
          "description": "A list of characteristics that characterize this service (ServiceCharacteristic [*]) ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceDate": {
          "description": "Date when the service was created (whatever its status).",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceDate,omitempty\"",
          "x-nullable": true
        },
        "serviceOrderItem": {
          "description": "A list of service order items related to this service",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedServiceOrderItem"
          },
          "x-go-custom-tag": "bson:\"serviceOrderItem,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceRelationship": {
          "description": "A list of service relationships (ServiceRelationship [*]). Describes links with other service(s) in the inventory.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRelationship"
          },
          "x-go-custom-tag": "bson:\"serviceRelationship,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "serviceSpecification": {
          "description": "The specification from which this service was instantiated",
          "x-go-custom-tag": "bson:\"serviceSpecification,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceSpecificationRef"
        },
        "serviceType": {
          "description": "Business type of the service",
          "type": "string",
          "x-go-custom-tag": "bson:\"serviceType,omitempty\"",
          "x-nullable": true
        },
        "startDate": {
          "description": "Date when the service starts",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDate,omitempty\"",
          "x-nullable": true
        },
        "startMode": {
          "description": "This attribute is an enumerated integer that indicates how the Service is started, such as: 0: Unknown; 1: Automatically by the managed environment; 2: Automatically by the owning device; 3: Manually by the Provider of the Service; 4: Manually by a Customer of the Provider; 5: Any of the above",
          "type": "string",
          "x-go-custom-tag": "bson:\"startMode,omitempty\"",
          "x-nullable": true
        },
        "state": {
          "description": "The life cycle state of the service, such as designed, reserved, active, etc...",
          "type": "string",
          "enum": [
            "feasibilityChecked",
            "designed",
            "reserved",
            "inactive",
            "active",
            "suspended",
            "terminated"
          ],
          "x-go-custom-tag": "bson:\"state,omitempty\"",
          "x-nullable": true
        },
        "supportingResource": {
          "description": "A list of supporting resources (SupportingResource [*]).Note: only Service of type RFS can be associated with Resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRef"
          },
          "x-go-custom-tag": "bson:\"supportingResource,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        },
        "supportingService": {
          "description": "A list of supporting services (SupportingService [*]). A collection of services that support this service (bundling, link CFS to RFS)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceRefOrValue"
          },
          "x-go-custom-tag": "bson:\"supportingService,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceRelationship": {
      "type": "object",
      "required": [
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "relationshipType": {
          "type": "string",
          "x-go-custom-tag": "bson:\"relationshipType,omitempty\"",
          "x-nullable": true
        },
        "service": {
          "x-go-custom-tag": "bson:\"service,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true,
          "$ref": "#/definitions/ServiceRefOrValue"
        },
        "serviceRelationshipCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          },
          "x-go-custom-tag": "bson:\"serviceRelationshipCharacteristic,omitempty\"",
          "x-nullable": true,
          "x-omitempty": true
        }
      }
    },
    "ServiceSpecificationRef": {
      "description": "Service specification reference: ServiceSpecification(s) required to realize a ProductSpecification.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "description": "When sub-classing, this defines the super-class",
          "type": "string",
          "x-go-custom-tag": "bson:\"@baseType,omitempty\"",
          "x-nullable": true
        },
        "@referredType": {
          "description": "The actual type of the target instance when needed for disambiguation.",
          "type": "string",
          "x-go-custom-tag": "bson:\"@referredType,omitempty\"",
          "x-nullable": true
        },
        "@schemaLocation": {
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"@schemaLocation,omitempty\"",
          "x-nullable": true
        },
        "@type": {
          "description": "When sub-classing, this defines the sub-class Extensible name",
          "type": "string",
          "x-go-custom-tag": "bson:\"@type,omitempty\"",
          "x-nullable": true
        },
        "href": {
          "description": "Hyperlink reference",
          "type": "string",
          "format": "uri",
          "x-go-custom-tag": "bson:\"href,omitempty\"",
          "x-nullable": true
        },
        "id": {
          "description": "unique identifier",
          "type": "string",
          "x-go-custom-tag": "bson:\"id\""
        },
        "name": {
          "description": "Name of the related entity.",
          "type": "string",
          "x-go-custom-tag": "bson:\"name,omitempty\"",
          "x-nullable": true
        },
        "version": {
          "description": "Service specification version",
          "type": "string",
          "x-go-custom-tag": "bson:\"version,omitempty\"",
          "x-nullable": true
        }
      }
    },
    "ServiceStateType": {
      "description": "Valid values for the lifecycle state of the service",
      "type": "string",
      "enum": [
        "feasibilityChecked",
        "designed",
        "reserved",
        "inactive",
        "active",
        "suspended",
        "terminated"
      ]
    },
    "TaskStateType": {
      "description": "Possible values for the state of a task",
      "type": "string",
      "enum": [
        "accepted",
        "terminatedWithError",
        "inProgress",
        "done"
      ]
    },
    "TimePeriod": {
      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
      "type": "object",
      "properties": {
        "endDateTime": {
          "description": "End of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"endDateTime,omitempty\"",
          "x-nullable": true,
          "example": "1985-04-12T23:20:50.52Z"
        },
        "startDateTime": {
          "description": "Start of the time period, using IETC-RFC-3339 format",
          "type": "string",
          "format": "date-time",
          "x-go-custom-tag": "bson:\"startDateTime,omitempty\"",
          "x-nullable": true,
          "example": "1985-04-12T23:20:50.52Z"
        }
      }
    }
  },
  "tags": [
    {
      "name": "serviceOrder"
    },
    {
      "name": "cancelServiceOrder"
    },
    {
      "name": "notification listeners (client side)"
    },
    {
      "name": "events subscription"
    }
  ]
}`))
}
